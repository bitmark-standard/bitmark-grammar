/*
  default lexer mode:
  [Bit Keyword]  -> non-bit-mode

  endof bit -> default mode
*/
lexer grammar bitmarkLexer;


BitBook:         NL '[.book'    ;
BitChapter:      NL '[.chapter'    ;
BitToc:          NL '[.toc'    ;
BitSummary:      NL '[.summary'    ;
BitIntlink:      NL '[.internal-link'    ;
BitAlias:        NL '[.bit-alias'    ;
BitGroups:       NL '[.group*'    ;
BitGroupt:       NL '[.group†'    ;
BitPlaceholder:  NL '[.placeholder'  ; // for internal use only
CLOZE:		 'CLOZE' ;
MATCH:		 'MATCH' ;

BitEssay:        NL '[.essay'    ;
BitArticle:	 NL '[.article'  ;
BitMessage:      NL '[.message'  ;  // NEW added 12/2/2020
BitSequence:	 NL '[.sequence'    ;
BitCorrection:	 NL '[.correction'    ;
BitMark:	 NL '[.mark'    ;
BitDocup:	 NL '[.document-upload'    ;
BitTakepic:	 NL '[.take-picture'    ;
BitRecaud:	 NL '[.record-audio'    ;
BitPrepnote:	 NL '[.preparation-note'    ;
BitAssign:	 NL '[.assignment'    ;

BitBotint: 	 NL '[.bot-interview'    ;
BitSelfassess: 	 NL '[.self-assessment'    ;
BitRating: 	 NL '[.rating'    ;
BitSurvey: 	 NL '[.survey'    ;
BitSurvey1: 	 NL '[.survey-1'    ;
BitSurveyanon: 	 NL '[.survey-anonymous'    ;
BitSurveyanon1:  NL '[.survey-anonymous-1'    ;
//
COMMENT:  '||' UTF8*? '||' SP? '\n'* ->skip ;
Image_type: BASIC | JPG | PNG | GIF | SVG ;
Audio_type: BASIC | MP3 | MP4 ;
Video_type: MP3 | MP2 | MP4 | FLV | GIF | WMV | MPEG | MPG ;
//----------------------------------------

OPDOLL:		'[$' ;      // Dollar
OPBUL:          '[•' ;      // Bullet
OPESC:          '[^' ;      // Escaped bracketted def
//OPAMP:	'[&' ;	    // Get conflict if exist.

OPRANGLES:      '[' '►' SP? ;  // Right angle - internal link
OPRANGLEL:      '[' '▶' SP? ;  // Right angle - internal link
OPDANGLE:       '[▼' SP? ;  // Down angle - Anchor
OPU:		'[_' SP? ;  // Underscore
OPB:		'[!' SP? ;  // Bang!
OPQ:		'[?' SP? ;  // Question
OPA:		'[@' SP? ;  // At
OPP:		'[+' SP? ;  // Plus
OPM:		'[-' SP? ;  // Minus
OPS:		'[\'' SP? ; // [' Single quote
OPR:		'[*' SP? ;  // [*
OPC:		'[%' SP? ;  // [% Item
OPHASH:		'[#' ;
CL:		']' ;
COLON:		':' ;
AMP:		'&' ;
DBLCOLON:	'::' ;
PLUS:		'+' ;
DotAt:	   	'.@' ;
Greater: 	'>' ;
Less:		'<' ;
RightAngle:	'►' ;
RightArrow:     '→' ;

// Separators
DBLEQ:		'==' ;

HSPL:		NL '===' SP? NL  ; // hard split
HSPL2:		'==='   SP? NL  ;   // hard split
SSPL:	  	NL '---' SP? NL  ; // soft split
SSPL2:	  	'---'   SP? NL  ; // soft split

URL: ('https'|'http'|'ftp'|'file') '://' [-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]+ ;


LIST_LINE:
/*
NOTE: For now we can't ascertain that these rules are preceded by a newline
as "_input" is undefined. Gotta resolve this issue to get this work.
    {_input.LA(1) == '\n'}? SP? [0-9]+ ('.'|')')? SP SENTENCE NL
  | {_input.LA(1) == '\n'}? SP? [A-Za-z]+ ('.'|')')? SP SENTENCE NL
  | {_input.LA(1) == '\n'}? SP? [*•●-] SP? SENTENCE NL
*/
    SP? '('? [0-9]+    ('.'|')') SP SENTENCE NL
  | SP? '('? [A-Za-z]+ ('.'|')') SP SENTENCE NL
  | SP? [*•●-]                   SP SENTENCE NL
;
EMP1:  '*' SP?    ~( '\n' )* ':'? SP? '*' NL;
EMP2:  '**' SP?   ~( '\n' )* ':'? SP? '**' NL;
EMP3:  '***' SP?  ~( '\n' )* ':'? SP? '***' NL;
NOTE: '>>' .*? '>>' ;
INS:  '++' .*? '++' ;
DEL:  '--' .*? '--' ;
REM:  '<<' (NL|.)*? '<<' ;
HELP: '??' .*? '??' ;
HIGH: '!!' .*? '!!' ;
ANNO:    '==' STR_SP '==(' [!*+\-_?@▼] STR_SPX ')' '==' ;
ANNO_IM: '==' STR_SP '==(' '&image' STR_SPX ')' '==' ;
ArticleText: '[' AmpArticle COLON (.|[ \t\r\n])*? CL ;

NOTCL:    [^\]] ;
NUMERIC:  ('+'|'-')?[0-9]+ ;
STRING:   STR  ;


SP:       ' '+  ;
NL:	  ('\n'|'\r\n') ;

//fragment
//STRCOL: ([-0-9̈A-Za-z_"«»„“ẞö◎ńʌɪˈ\p{Block=Latin_1_Supplement}]|'\\')+ ;

fragment
STR_SP:
  ([ :0-9̈A-Za-z_"«»„“ẞ◇◼︎ö◎ńʌɪˈ\p{Block=Latin_1_Supplement}]|'\\'|'{'|'}')+ ;

fragment
STR_SPX:
  ([0-9̈A-Za-z_ %?@!=*+-/:#$;<>'"«»„“ẞ◇◼︎ö◎ńʌɪˈ\p{Block=Latin_1_Supplement}]|'\\'|'{'|'}')+ ;

fragment
STR:
  ([-0-9̈A-Za-z_"«»„“ẞö◎ńʌɪˈ\p{Block=Latin_1_Supplement}\p{Emoji}]|'\\'|'{'|'}')+ ;

SENTENCE:
  ([0-9A-Za-z_̈%?@!=*+-/ \t$#;"'–•●—«»…„“”ˈ‘’́ẞ◇◼︎ö◎ńʌɪřłčě➔^ |()\p{Block=Latin_1_Supplement}\p{Emoji}]|'\\'|'{'|'}')+
;


fragment UTF8:    [̈\u0000-\u00FF\u27CC] ;

AtProgress:      '[@progress:'  ;
AtReference:     '[@reference:'  ;
AtExamplecol:    '[@example:'  ;
AtExamplecl:     '[@example]'  ;
AtLonganswer:    '[@longAnswer]'  ;
AtShortanswer:   '[@shortAnswer]'  ;
AtLabeltrue:     '[@label-true:'  ;
AtLabelfalse:    '[@label-false:'  ;
AtPoints:        '[@points:'  ;
AtSrc:		 '[@src' [0-9]+'x' ;  // added Sep 17

Http:	  	 'http://'  ;
Https:   	 'https://'  ;
ColonCollection: ':collection'  ;
ColonBook:       ':book' ;
AmpAudio:	 '&audio' ;
AmpAudioOnline:  '&audio-online' ;
AmpImage:	 '&image' ;
AmpImageOnline:  '&image-online' ;
AmpImageZoom:    '&image-zoom' ;
AmpImageWAudio:	 '&imageWithAudio' ;
AmpVideo:	 '&video' ;
AmpVideoOnline:  '&video-online' ;
AmpArticle:      '&article' ;
AmpArticleOnline:'&article-online' ;
//AmpArticleAtt:   '&article-attachment' ;
AmpDocument:      '&document' ;
AmpDocumentOnline:'&document-online' ;
AmpApp:        	 '&app' ;
AmpWebsite:      '&website' ;  // NEW added 12/2/2020 usage [.message&website]..

OpAmpAudio:	 '[&audio' ;
OpAmpAudioOnline:'[&audio-online' ;
OpAmpImage:	 '[&image' ;
OpAmpImageOnline:'[&image-online' ;
OpAmpImageZoom:  '[&image-zoom' ;
OpAmpImageWAudio:'[&ImageWithAudio' ;
OpAmpVideo:	 '[&video' ;
OpAmpVideoOnline:'[&video-online' ;
OpAmpArticleOnline:'[&article-online' ;
OpAmpArticle:    '[&article' ;
OpAmpArticleAtt: '[&article-attachment' ;
OpAmpDocument:   '[&document' ;
OpAmpDocumentOnline:'[&document-online' ;
OpAmpApp:        '[&app' ;
OpAmpWebsite:    '[&website' ;  // NEW added 12/2/2020 usage [.message&website]..

BitmarkMinus: 	 ':bitmark--' ;
BitmarkPlus:  	 ':bitmark++' ;
ColonText:   	 ':text' ;

BASIC:  ':basic' ;
JPG:    ':jpg' ;
PNG:    ':png' ;
GIF:    ':gif' ;
SVG:    ':svg' ;
MP2:	':mp2' ;
MP3:	':mp3' ;
MP4:	':mp4' ;
FLV:    ':flv' ;
WMV:    ':wmv' ;
MPEG:   ':mpeg';
MPG:    ':mpg' ;

TEL:	'tel:' ;
OPATALT: '[@alt:' ;
OPAMARK: '[@mark:' ;
DotArticleAtt:  '.article-attachment' ;
ShowInIndex:  '[@showInIndex]' ;
OpAtCaption: '[@caption:' ;

