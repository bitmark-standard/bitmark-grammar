/*
 ***************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/InterpreterRuleContext.js ***!
  \**************************************************************** exports provided: InterpreterRuleContext  ********************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/ListTokenSource.js ***!
  \********************************************************* exports provided: ListTokenSource  ************************************************************ !*\
  !*** ../src/typescript-es6/antlr4es6/ParserInterpreter.js ***!
  \*********************************************************** exports provided: ParserInterpreter  ******************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/misc/MultiMap.js ***!
  \******************************************************* exports provided: MultiMap  ************************************************************* !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/Chunk.js ***!
  \************************************************************ exports provided: Chunk  ********************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/ParseTreeMatch.js ***!
  \********************************************************************* exports provided: ParseTreeMatch  ************************************************************************ !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePattern.js ***!
  \*********************************************************************** exports provided: ParseTreePattern  ******************************************************************************* !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePatternMatcher.js ***!
  \****************************************************************************** exports provided: ParseTreePatternMatcher  ******************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/RuleTagToken.js ***!
  \******************************************************************* exports provided: RuleTagToken  **************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/TagChunk.js ***!
  \*************************************************************** exports provided: TagChunk  ***************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/TextChunk.js ***!
  \**************************************************************** exports provided: TextChunk  ********************************************************************* !*\
  !*** ../src/typescript-es6/antlr4es6/tree/pattern/TokenTagToken.js ***!
  \******************************************************************** exports provided: TokenTagToken  *********************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPath.js ***!
  \********************************************************** exports provided: XPath  ****************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js ***!
  \***************************************************************** exports provided: XPathElement  **************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathLexer.js ***!
  \*************************************************************** exports provided: XPathLexer  ***************************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathLexerErrorListener.js ***!
  \**************************************************************************** exports provided: XPathLexerErrorListener  ****************************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleAnywhereElement.js ***!
  \***************************************************************************** exports provided: XPathRuleAnywhereElement  ********************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleElement.js ***!
  \********************************************************************* exports provided: XPathRuleElement  ******************************************************************************* !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenAnywhereElement.js ***!
  \****************************************************************************** exports provided: XPathTokenAnywhereElement  *********************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenElement.js ***!
  \********************************************************************** exports provided: XPathTokenElement  ********************************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardAnywhereElement.js ***!
  \********************************************************************************* exports provided: XPathWildcardAnywhereElement  ************************************************************************** !*\
  !*** ../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardElement.js ***!
  \************************************************************************* exports provided: XPathWildcardElement */
'use strict';(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[1],{"../src/typescript-es6/antlr4es6/InterpreterRuleContext.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterpreterRuleContext", function() { return InterpreterRuleContext; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _ParserRuleContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParserRuleContext */ "../src/typescript-es6/antlr4es6/ParserRuleContext.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// ConvertTo-TS run at 2016-10-04T11:26:51.5898546-07:00\n\n\n/**\n * This class extends {@link ParserRuleContext} by allowing the value of\n * {@link #getRuleIndex} to be explicitly set for the context.\n *\n * {@link ParserRuleContext} does not include field storage for the rule index\n * since the context classes created by the code generator override the\n * {@link #getRuleIndex} method to return the correct value for that context.\n * Since the parser interpreter does not use the context classes generated for a\n * parser, this class (with slightly more memory overhead per node) is used to\n * provide equivalent functionality.\n */\nclass InterpreterRuleContext extends _ParserRuleContext__WEBPACK_IMPORTED_MODULE_1__["ParserRuleContext"] {\n    constructor(ruleIndex, parent, invokingStateNumber) {\n        if (invokingStateNumber !== undefined) {\n            super(parent, invokingStateNumber);\n        }\n        else {\n            super();\n        }\n        this._ruleIndex = ruleIndex;\n    }\n    get ruleIndex() {\n        return this._ruleIndex;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], InterpreterRuleContext.prototype, "ruleIndex", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi9JbnRlcnByZXRlclJ1bGVDb250ZXh0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvSW50ZXJwcmV0ZXJSdWxlQ29udGV4dC5qcz82MGE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuLy8gQ29udmVydFRvLVRTIHJ1biBhdCAyMDE2LTEwLTA0VDExOjI2OjUxLjU4OTg1NDYtMDc6MDBcbmltcG9ydCB7IE92ZXJyaWRlIH0gZnJvbSBcIi4vRGVjb3JhdG9yc1wiO1xuaW1wb3J0IHsgUGFyc2VyUnVsZUNvbnRleHQgfSBmcm9tIFwiLi9QYXJzZXJSdWxlQ29udGV4dFwiO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGV4dGVuZHMge0BsaW5rIFBhcnNlclJ1bGVDb250ZXh0fSBieSBhbGxvd2luZyB0aGUgdmFsdWUgb2ZcbiAqIHtAbGluayAjZ2V0UnVsZUluZGV4fSB0byBiZSBleHBsaWNpdGx5IHNldCBmb3IgdGhlIGNvbnRleHQuXG4gKlxuICoge0BsaW5rIFBhcnNlclJ1bGVDb250ZXh0fSBkb2VzIG5vdCBpbmNsdWRlIGZpZWxkIHN0b3JhZ2UgZm9yIHRoZSBydWxlIGluZGV4XG4gKiBzaW5jZSB0aGUgY29udGV4dCBjbGFzc2VzIGNyZWF0ZWQgYnkgdGhlIGNvZGUgZ2VuZXJhdG9yIG92ZXJyaWRlIHRoZVxuICoge0BsaW5rICNnZXRSdWxlSW5kZXh9IG1ldGhvZCB0byByZXR1cm4gdGhlIGNvcnJlY3QgdmFsdWUgZm9yIHRoYXQgY29udGV4dC5cbiAqIFNpbmNlIHRoZSBwYXJzZXIgaW50ZXJwcmV0ZXIgZG9lcyBub3QgdXNlIHRoZSBjb250ZXh0IGNsYXNzZXMgZ2VuZXJhdGVkIGZvciBhXG4gKiBwYXJzZXIsIHRoaXMgY2xhc3MgKHdpdGggc2xpZ2h0bHkgbW9yZSBtZW1vcnkgb3ZlcmhlYWQgcGVyIG5vZGUpIGlzIHVzZWQgdG9cbiAqIHByb3ZpZGUgZXF1aXZhbGVudCBmdW5jdGlvbmFsaXR5LlxuICovXG5leHBvcnQgY2xhc3MgSW50ZXJwcmV0ZXJSdWxlQ29udGV4dCBleHRlbmRzIFBhcnNlclJ1bGVDb250ZXh0IHtcbiAgICBjb25zdHJ1Y3RvcihydWxlSW5kZXgsIHBhcmVudCwgaW52b2tpbmdTdGF0ZU51bWJlcikge1xuICAgICAgICBpZiAoaW52b2tpbmdTdGF0ZU51bWJlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzdXBlcihwYXJlbnQsIGludm9raW5nU3RhdGVOdW1iZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9ydWxlSW5kZXggPSBydWxlSW5kZXg7XG4gICAgfVxuICAgIGdldCBydWxlSW5kZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9ydWxlSW5kZXg7XG4gICAgfVxufVxuX19kZWNvcmF0ZShbXG4gICAgT3ZlcnJpZGVcbl0sIEludGVycHJldGVyUnVsZUNvbnRleHQucHJvdG90eXBlLCBcInJ1bGVJbmRleFwiLCBudWxsKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/InterpreterRuleContext.js\n')},
"../src/typescript-es6/antlr4es6/ListTokenSource.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListTokenSource", function() { return ListTokenSource; });\n/* harmony import */ var _CommonTokenFactory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CommonTokenFactory */ "../src/typescript-es6/antlr4es6/CommonTokenFactory.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Token */ "../src/typescript-es6/antlr4es6/Token.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n/**\n * Provides an implementation of {@link TokenSource} as a wrapper around a list\n * of {@link Token} objects.\n *\n * If the final token in the list is an {@link Token#EOF} token, it will be used\n * as the EOF token for every call to {@link #nextToken} after the end of the\n * list is reached. Otherwise, an EOF token will be created.\n */\nlet ListTokenSource = class ListTokenSource {\n    /**\n     * Constructs a new {@link ListTokenSource} instance from the specified\n     * collection of {@link Token} objects and source name.\n     *\n     * @param tokens The collection of {@link Token} objects to provide as a\n     * {@link TokenSource}.\n     * @param sourceName The name of the {@link TokenSource}. If this value is\n     * `undefined`, {@link #getSourceName} will attempt to infer the name from\n     * the next {@link Token} (or the previous token if the end of the input has\n     * been reached).\n     *\n     * @exception NullPointerException if `tokens` is `undefined`\n     */\n    constructor(tokens, sourceName) {\n        /**\n         * The index into {@link #tokens} of token to return by the next call to\n         * {@link #nextToken}. The end of the input is indicated by this value\n         * being greater than or equal to the number of items in {@link #tokens}.\n         */\n        this.i = 0;\n        /**\n         * This is the backing field for {@link #getTokenFactory} and\n         * {@link setTokenFactory}.\n         */\n        this._factory = _CommonTokenFactory__WEBPACK_IMPORTED_MODULE_0__["CommonTokenFactory"].DEFAULT;\n        if (tokens == null) {\n            throw new Error("tokens cannot be null");\n        }\n        this.tokens = tokens;\n        this._sourceName = sourceName;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    get charPositionInLine() {\n        if (this.i < this.tokens.length) {\n            return this.tokens[this.i].charPositionInLine;\n        }\n        else if (this.eofToken != null) {\n            return this.eofToken.charPositionInLine;\n        }\n        else if (this.tokens.length > 0) {\n            // have to calculate the result from the line/column of the previous\n            // token, along with the text of the token.\n            let lastToken = this.tokens[this.tokens.length - 1];\n            let tokenText = lastToken.text;\n            if (tokenText != null) {\n                let lastNewLine = tokenText.lastIndexOf("\\n");\n                if (lastNewLine >= 0) {\n                    return tokenText.length - lastNewLine - 1;\n                }\n            }\n            return lastToken.charPositionInLine + lastToken.stopIndex - lastToken.startIndex + 1;\n        }\n        // only reach this if tokens is empty, meaning EOF occurs at the first\n        // position in the input\n        return 0;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    nextToken() {\n        if (this.i >= this.tokens.length) {\n            if (this.eofToken == null) {\n                let start = -1;\n                if (this.tokens.length > 0) {\n                    let previousStop = this.tokens[this.tokens.length - 1].stopIndex;\n                    if (previousStop !== -1) {\n                        start = previousStop + 1;\n                    }\n                }\n                let stop = Math.max(-1, start - 1);\n                this.eofToken = this._factory.create({ source: this, stream: this.inputStream }, _Token__WEBPACK_IMPORTED_MODULE_2__["Token"].EOF, "EOF", _Token__WEBPACK_IMPORTED_MODULE_2__["Token"].DEFAULT_CHANNEL, start, stop, this.line, this.charPositionInLine);\n            }\n            return this.eofToken;\n        }\n        let t = this.tokens[this.i];\n        if (this.i === this.tokens.length - 1 && t.type === _Token__WEBPACK_IMPORTED_MODULE_2__["Token"].EOF) {\n            this.eofToken = t;\n        }\n        this.i++;\n        return t;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    get line() {\n        if (this.i < this.tokens.length) {\n            return this.tokens[this.i].line;\n        }\n        else if (this.eofToken != null) {\n            return this.eofToken.line;\n        }\n        else if (this.tokens.length > 0) {\n            // have to calculate the result from the line/column of the previous\n            // token, along with the text of the token.\n            let lastToken = this.tokens[this.tokens.length - 1];\n            let line = lastToken.line;\n            let tokenText = lastToken.text;\n            if (tokenText != null) {\n                for (let i = 0; i < tokenText.length; i++) {\n                    if (tokenText.charAt(i) === "\\n") {\n                        line++;\n                    }\n                }\n            }\n            // if no text is available, assume the token did not contain any newline characters.\n            return line;\n        }\n        // only reach this if tokens is empty, meaning EOF occurs at the first\n        // position in the input\n        return 1;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    get inputStream() {\n        if (this.i < this.tokens.length) {\n            return this.tokens[this.i].inputStream;\n        }\n        else if (this.eofToken != null) {\n            return this.eofToken.inputStream;\n        }\n        else if (this.tokens.length > 0) {\n            return this.tokens[this.tokens.length - 1].inputStream;\n        }\n        // no input stream information is available\n        return undefined;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    get sourceName() {\n        if (this._sourceName) {\n            return this._sourceName;\n        }\n        let inputStream = this.inputStream;\n        if (inputStream != null) {\n            return inputStream.sourceName;\n        }\n        return "List";\n    }\n    /**\n     * {@inheritDoc}\n     */\n    // @Override\n    set tokenFactory(factory) {\n        this._factory = factory;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    get tokenFactory() {\n        return this._factory;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], ListTokenSource.prototype, "charPositionInLine", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], ListTokenSource.prototype, "nextToken", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], ListTokenSource.prototype, "line", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], ListTokenSource.prototype, "inputStream", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], ListTokenSource.prototype, "sourceName", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"],\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"],\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"])\n], ListTokenSource.prototype, "tokenFactory", null);\nListTokenSource = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"])\n], ListTokenSource);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/ListTokenSource.js\n')},
"../src/typescript-es6/antlr4es6/ParserInterpreter.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParserInterpreter", function() { return ParserInterpreter; });\n/* harmony import */ var _atn_ATNState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./atn/ATNState */ "../src/typescript-es6/antlr4es6/atn/ATNState.js");\n/* harmony import */ var _atn_ATNStateType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./atn/ATNStateType */ "../src/typescript-es6/antlr4es6/atn/ATNStateType.js");\n/* harmony import */ var _misc_BitSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./misc/BitSet */ "../src/typescript-es6/antlr4es6/misc/BitSet.js");\n/* harmony import */ var _FailedPredicateException__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FailedPredicateException */ "../src/typescript-es6/antlr4es6/FailedPredicateException.js");\n/* harmony import */ var _InputMismatchException__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./InputMismatchException */ "../src/typescript-es6/antlr4es6/InputMismatchException.js");\n/* harmony import */ var _InterpreterRuleContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./InterpreterRuleContext */ "../src/typescript-es6/antlr4es6/InterpreterRuleContext.js");\n/* harmony import */ var _atn_LoopEndState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./atn/LoopEndState */ "../src/typescript-es6/antlr4es6/atn/LoopEndState.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Parser */ "../src/typescript-es6/antlr4es6/Parser.js");\n/* harmony import */ var _atn_ParserATNSimulator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./atn/ParserATNSimulator */ "../src/typescript-es6/antlr4es6/atn/ParserATNSimulator.js");\n/* harmony import */ var _RecognitionException__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./RecognitionException */ "../src/typescript-es6/antlr4es6/RecognitionException.js");\n/* harmony import */ var _atn_StarLoopEntryState__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./atn/StarLoopEntryState */ "../src/typescript-es6/antlr4es6/atn/StarLoopEntryState.js");\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Token */ "../src/typescript-es6/antlr4es6/Token.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** A parser simulator that mimics what ANTLR\'s generated\n *  parser code does. A ParserATNSimulator is used to make\n *  predictions via adaptivePredict but this class moves a pointer through the\n *  ATN to simulate parsing. ParserATNSimulator just\n *  makes us efficient rather than having to backtrack, for example.\n *\n *  This properly creates parse trees even for left recursive rules.\n *\n *  We rely on the left recursive rule invocation and special predicate\n *  transitions to make left recursive rules work.\n *\n *  See TestParserInterpreter for examples.\n */\nlet ParserInterpreter = class ParserInterpreter extends _Parser__WEBPACK_IMPORTED_MODULE_8__["Parser"] {\n    constructor(grammarFileName, vocabulary, ruleNames, atn, input) {\n        super(grammarFileName instanceof ParserInterpreter ? grammarFileName.inputStream : input);\n        /** This stack corresponds to the _parentctx, _parentState pair of locals\n         *  that would exist on call stack frames with a recursive descent parser;\n         *  in the generated function for a left-recursive rule you\'d see:\n         *\n         *  private EContext e(int _p) {\n         *      ParserRuleContext _parentctx = _ctx;    // Pair.a\n         *      int _parentState = state;          // Pair.b\n         *      ...\n         *  }\n         *\n         *  Those values are used to create new recursive rule invocation contexts\n         *  associated with left operand of an alt like "expr \'*\' expr".\n         */\n        this._parentContextStack = [];\n        /** We need a map from (decision,inputIndex)->forced alt for computing ambiguous\n         *  parse trees. For now, we allow exactly one override.\n         */\n        this.overrideDecision = -1;\n        this.overrideDecisionInputIndex = -1;\n        this.overrideDecisionAlt = -1;\n        this.overrideDecisionReached = false; // latch and only override once; error might trigger infinite loop\n        /** What is the current context when we override a decisions?  This tells\n         *  us what the root of the parse tree is when using override\n         *  for an ambiguity/lookahead check.\n         */\n        this._overrideDecisionRoot = undefined;\n        if (grammarFileName instanceof ParserInterpreter) {\n            let old = grammarFileName;\n            this._grammarFileName = old._grammarFileName;\n            this._atn = old._atn;\n            this.pushRecursionContextStates = old.pushRecursionContextStates;\n            this._ruleNames = old._ruleNames;\n            this._vocabulary = old._vocabulary;\n            this.interpreter = new _atn_ParserATNSimulator__WEBPACK_IMPORTED_MODULE_9__["ParserATNSimulator"](this._atn, this);\n        }\n        else {\n            // The second constructor requires non-null arguments\n            vocabulary = vocabulary;\n            ruleNames = ruleNames;\n            atn = atn;\n            this._grammarFileName = grammarFileName;\n            this._atn = atn;\n            this._ruleNames = ruleNames.slice(0);\n            this._vocabulary = vocabulary;\n            // identify the ATN states where pushNewRecursionContext() must be called\n            this.pushRecursionContextStates = new _misc_BitSet__WEBPACK_IMPORTED_MODULE_2__["BitSet"](atn.states.length);\n            for (let state of atn.states) {\n                if (!(state instanceof _atn_StarLoopEntryState__WEBPACK_IMPORTED_MODULE_11__["StarLoopEntryState"])) {\n                    continue;\n                }\n                if (state.precedenceRuleDecision) {\n                    this.pushRecursionContextStates.set(state.stateNumber);\n                }\n            }\n            // get atn simulator that knows how to do predictions\n            this.interpreter = new _atn_ParserATNSimulator__WEBPACK_IMPORTED_MODULE_9__["ParserATNSimulator"](atn, this);\n        }\n    }\n    reset(resetInput) {\n        if (resetInput === undefined) {\n            super.reset();\n        }\n        else {\n            super.reset(resetInput);\n        }\n        this.overrideDecisionReached = false;\n        this._overrideDecisionRoot = undefined;\n    }\n    get atn() {\n        return this._atn;\n    }\n    get vocabulary() {\n        return this._vocabulary;\n    }\n    get ruleNames() {\n        return this._ruleNames;\n    }\n    get grammarFileName() {\n        return this._grammarFileName;\n    }\n    /** Begin parsing at startRuleIndex */\n    parse(startRuleIndex) {\n        let startRuleStartState = this._atn.ruleToStartState[startRuleIndex];\n        this._rootContext = this.createInterpreterRuleContext(undefined, _atn_ATNState__WEBPACK_IMPORTED_MODULE_0__["ATNState"].INVALID_STATE_NUMBER, startRuleIndex);\n        if (startRuleStartState.isPrecedenceRule) {\n            this.enterRecursionRule(this._rootContext, startRuleStartState.stateNumber, startRuleIndex, 0);\n        }\n        else {\n            this.enterRule(this._rootContext, startRuleStartState.stateNumber, startRuleIndex);\n        }\n        while (true) {\n            let p = this.atnState;\n            switch (p.stateType) {\n                case _atn_ATNStateType__WEBPACK_IMPORTED_MODULE_1__["ATNStateType"].RULE_STOP:\n                    // pop; return from rule\n                    if (this._ctx.isEmpty) {\n                        if (startRuleStartState.isPrecedenceRule) {\n                            let result = this._ctx;\n                            let parentContext = this._parentContextStack.pop();\n                            this.unrollRecursionContexts(parentContext[0]);\n                            return result;\n                        }\n                        else {\n                            this.exitRule();\n                            return this._rootContext;\n                        }\n                    }\n                    this.visitRuleStopState(p);\n                    break;\n                default:\n                    try {\n                        this.visitState(p);\n                    }\n                    catch (e) {\n                        if (e instanceof _RecognitionException__WEBPACK_IMPORTED_MODULE_10__["RecognitionException"]) {\n                            this.state = this._atn.ruleToStopState[p.ruleIndex].stateNumber;\n                            this.context.exception = e;\n                            this.errorHandler.reportError(this, e);\n                            this.recover(e);\n                        }\n                        else {\n                            throw e;\n                        }\n                    }\n                    break;\n            }\n        }\n    }\n    enterRecursionRule(localctx, state, ruleIndex, precedence) {\n        this._parentContextStack.push([this._ctx, localctx.invokingState]);\n        super.enterRecursionRule(localctx, state, ruleIndex, precedence);\n    }\n    get atnState() {\n        return this._atn.states[this.state];\n    }\n    visitState(p) {\n        let predictedAlt = 1;\n        if (p.numberOfTransitions > 1) {\n            predictedAlt = this.visitDecisionState(p);\n        }\n        let transition = p.transition(predictedAlt - 1);\n        switch (transition.serializationType) {\n            case 1 /* EPSILON */:\n                if (this.pushRecursionContextStates.get(p.stateNumber) &&\n                    !(transition.target instanceof _atn_LoopEndState__WEBPACK_IMPORTED_MODULE_6__["LoopEndState"])) {\n                    // We are at the start of a left recursive rule\'s (...)* loop\n                    // and we\'re not taking the exit branch of loop.\n                    let parentContext = this._parentContextStack[this._parentContextStack.length - 1];\n                    let localctx = this.createInterpreterRuleContext(parentContext[0], parentContext[1], this._ctx.ruleIndex);\n                    this.pushNewRecursionContext(localctx, this._atn.ruleToStartState[p.ruleIndex].stateNumber, this._ctx.ruleIndex);\n                }\n                break;\n            case 5 /* ATOM */:\n                this.match(transition._label);\n                break;\n            case 2 /* RANGE */:\n            case 7 /* SET */:\n            case 8 /* NOT_SET */:\n                if (!transition.matches(this._input.LA(1), _Token__WEBPACK_IMPORTED_MODULE_12__["Token"].MIN_USER_TOKEN_TYPE, 65535)) {\n                    this.recoverInline();\n                }\n                this.matchWildcard();\n                break;\n            case 9 /* WILDCARD */:\n                this.matchWildcard();\n                break;\n            case 3 /* RULE */:\n                let ruleStartState = transition.target;\n                let ruleIndex = ruleStartState.ruleIndex;\n                let newctx = this.createInterpreterRuleContext(this._ctx, p.stateNumber, ruleIndex);\n                if (ruleStartState.isPrecedenceRule) {\n                    this.enterRecursionRule(newctx, ruleStartState.stateNumber, ruleIndex, transition.precedence);\n                }\n                else {\n                    this.enterRule(newctx, transition.target.stateNumber, ruleIndex);\n                }\n                break;\n            case 4 /* PREDICATE */:\n                let predicateTransition = transition;\n                if (!this.sempred(this._ctx, predicateTransition.ruleIndex, predicateTransition.predIndex)) {\n                    throw new _FailedPredicateException__WEBPACK_IMPORTED_MODULE_3__["FailedPredicateException"](this);\n                }\n                break;\n            case 6 /* ACTION */:\n                let actionTransition = transition;\n                this.action(this._ctx, actionTransition.ruleIndex, actionTransition.actionIndex);\n                break;\n            case 10 /* PRECEDENCE */:\n                if (!this.precpred(this._ctx, transition.precedence)) {\n                    let precedence = transition.precedence;\n                    throw new _FailedPredicateException__WEBPACK_IMPORTED_MODULE_3__["FailedPredicateException"](this, `precpred(_ctx, ${precedence})`);\n                }\n                break;\n            default:\n                throw new Error("UnsupportedOperationException: Unrecognized ATN transition type.");\n        }\n        this.state = transition.target.stateNumber;\n    }\n    /** Method visitDecisionState() is called when the interpreter reaches\n     *  a decision state (instance of DecisionState). It gives an opportunity\n     *  for subclasses to track interesting things.\n     */\n    visitDecisionState(p) {\n        let predictedAlt;\n        this.errorHandler.sync(this);\n        let decision = p.decision;\n        if (decision === this.overrideDecision && this._input.index === this.overrideDecisionInputIndex && !this.overrideDecisionReached) {\n            predictedAlt = this.overrideDecisionAlt;\n            this.overrideDecisionReached = true;\n        }\n        else {\n            predictedAlt = this.interpreter.adaptivePredict(this._input, decision, this._ctx);\n        }\n        return predictedAlt;\n    }\n    /** Provide simple "factory" for InterpreterRuleContext\'s.\n     *  @since 4.5.1\n     */\n    createInterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n        return new _InterpreterRuleContext__WEBPACK_IMPORTED_MODULE_5__["InterpreterRuleContext"](ruleIndex, parent, invokingStateNumber);\n    }\n    visitRuleStopState(p) {\n        let ruleStartState = this._atn.ruleToStartState[p.ruleIndex];\n        if (ruleStartState.isPrecedenceRule) {\n            let parentContext = this._parentContextStack.pop();\n            this.unrollRecursionContexts(parentContext[0]);\n            this.state = parentContext[1];\n        }\n        else {\n            this.exitRule();\n        }\n        let ruleTransition = this._atn.states[this.state].transition(0);\n        this.state = ruleTransition.followState.stateNumber;\n    }\n    /** Override this parser interpreters normal decision-making process\n     *  at a particular decision and input token index. Instead of\n     *  allowing the adaptive prediction mechanism to choose the\n     *  first alternative within a block that leads to a successful parse,\n     *  force it to take the alternative, 1..n for n alternatives.\n     *\n     *  As an implementation limitation right now, you can only specify one\n     *  override. This is sufficient to allow construction of different\n     *  parse trees for ambiguous input. It means re-parsing the entire input\n     *  in general because you\'re never sure where an ambiguous sequence would\n     *  live in the various parse trees. For example, in one interpretation,\n     *  an ambiguous input sequence would be matched completely in expression\n     *  but in another it could match all the way back to the root.\n     *\n     *  s : e \'!\'? ;\n     *  e : ID\n     *    | ID \'!\'\n     *    ;\n     *\n     *  Here, x! can be matched as (s (e ID) !) or (s (e ID !)). In the first\n     *  case, the ambiguous sequence is fully contained only by the root.\n     *  In the second case, the ambiguous sequences fully contained within just\n     *  e, as in: (e ID !).\n     *\n     *  Rather than trying to optimize this and make\n     *  some intelligent decisions for optimization purposes, I settled on\n     *  just re-parsing the whole input and then using\n     *  {link Trees#getRootOfSubtreeEnclosingRegion} to find the minimal\n     *  subtree that contains the ambiguous sequence. I originally tried to\n     *  record the call stack at the point the parser detected and ambiguity but\n     *  left recursive rules create a parse tree stack that does not reflect\n     *  the actual call stack. That impedance mismatch was enough to make\n     *  it it challenging to restart the parser at a deeply nested rule\n     *  invocation.\n     *\n     *  Only parser interpreters can override decisions so as to avoid inserting\n     *  override checking code in the critical ALL(*) prediction execution path.\n     *\n     *  @since 4.5\n     */\n    addDecisionOverride(decision, tokenIndex, forcedAlt) {\n        this.overrideDecision = decision;\n        this.overrideDecisionInputIndex = tokenIndex;\n        this.overrideDecisionAlt = forcedAlt;\n    }\n    get overrideDecisionRoot() {\n        return this._overrideDecisionRoot;\n    }\n    /** Rely on the error handler for this parser but, if no tokens are consumed\n     *  to recover, add an error node. Otherwise, nothing is seen in the parse\n     *  tree.\n     */\n    recover(e) {\n        let i = this._input.index;\n        this.errorHandler.recover(this, e);\n        if (this._input.index === i) {\n            // no input consumed, better add an error node\n            let tok = e.getOffendingToken();\n            if (!tok) {\n                throw new Error("Expected exception to have an offending token");\n            }\n            let source = tok.tokenSource;\n            let stream = source !== undefined ? source.inputStream : undefined;\n            let sourcePair = { source, stream };\n            if (e instanceof _InputMismatchException__WEBPACK_IMPORTED_MODULE_4__["InputMismatchException"]) {\n                let expectedTokens = e.expectedTokens;\n                if (expectedTokens === undefined) {\n                    throw new Error("Expected the exception to provide expected tokens");\n                }\n                let expectedTokenType = _Token__WEBPACK_IMPORTED_MODULE_12__["Token"].INVALID_TYPE;\n                if (!expectedTokens.isNil) {\n                    // get any element\n                    expectedTokenType = expectedTokens.minElement;\n                }\n                let errToken = this.tokenFactory.create(sourcePair, expectedTokenType, tok.text, _Token__WEBPACK_IMPORTED_MODULE_12__["Token"].DEFAULT_CHANNEL, -1, -1, // invalid start/stop\n                tok.line, tok.charPositionInLine);\n                this._ctx.addErrorNode(this.createErrorNode(this._ctx, errToken));\n            }\n            else { // NoViableAlt\n                let source = tok.tokenSource;\n                let errToken = this.tokenFactory.create(sourcePair, _Token__WEBPACK_IMPORTED_MODULE_12__["Token"].INVALID_TYPE, tok.text, _Token__WEBPACK_IMPORTED_MODULE_12__["Token"].DEFAULT_CHANNEL, -1, -1, // invalid start/stop\n                tok.line, tok.charPositionInLine);\n                this._ctx.addErrorNode(this.createErrorNode(this._ctx, errToken));\n            }\n        }\n    }\n    recoverInline() {\n        return this._errHandler.recoverInline(this);\n    }\n    /** Return the root of the parse, which can be useful if the parser\n     *  bails out. You still can access the top node. Note that,\n     *  because of the way left recursive rules add children, it\'s possible\n     *  that the root will not have any children if the start rule immediately\n     *  called and left recursive rule that fails.\n     *\n     * @since 4.5.1\n     */\n    get rootContext() {\n        return this._rootContext;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["NotNull"]\n], ParserInterpreter.prototype, "_vocabulary", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "reset", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "atn", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "vocabulary", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "ruleNames", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "grammarFileName", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_7__["Override"]\n], ParserInterpreter.prototype, "enterRecursionRule", null);\nParserInterpreter = __decorate([\n    __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_7__["NotNull"])\n], ParserInterpreter);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/ParserInterpreter.js\n')},
"../src/typescript-es6/antlr4es6/misc/MultiMap.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiMap", function() { return MultiMap; });\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n// ConvertTo-TS run at 2016-10-04T11:26:42.1346951-07:00\nclass MultiMap extends Map {\n    constructor() {\n        super();\n    }\n    map(key, value) {\n        let elementsForKey = super.get(key);\n        if (!elementsForKey) {\n            elementsForKey = [];\n            super.set(key, elementsForKey);\n        }\n        elementsForKey.push(value);\n    }\n    getPairs() {\n        let pairs = [];\n        this.forEach((values, key) => {\n            values.forEach((v) => {\n                pairs.push([key, v]);\n            });\n        });\n        return pairs;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi9taXNjL011bHRpTWFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvbWlzYy9NdWx0aU1hcC5qcz9lMDE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuLy8gQ29udmVydFRvLVRTIHJ1biBhdCAyMDE2LTEwLTA0VDExOjI2OjQyLjEzNDY5NTEtMDc6MDBcbmV4cG9ydCBjbGFzcyBNdWx0aU1hcCBleHRlbmRzIE1hcCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIG1hcChrZXksIHZhbHVlKSB7XG4gICAgICAgIGxldCBlbGVtZW50c0ZvcktleSA9IHN1cGVyLmdldChrZXkpO1xuICAgICAgICBpZiAoIWVsZW1lbnRzRm9yS2V5KSB7XG4gICAgICAgICAgICBlbGVtZW50c0ZvcktleSA9IFtdO1xuICAgICAgICAgICAgc3VwZXIuc2V0KGtleSwgZWxlbWVudHNGb3JLZXkpO1xuICAgICAgICB9XG4gICAgICAgIGVsZW1lbnRzRm9yS2V5LnB1c2godmFsdWUpO1xuICAgIH1cbiAgICBnZXRQYWlycygpIHtcbiAgICAgICAgbGV0IHBhaXJzID0gW107XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWVzLCBrZXkpID0+IHtcbiAgICAgICAgICAgIHZhbHVlcy5mb3JFYWNoKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgcGFpcnMucHVzaChba2V5LCB2XSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwYWlycztcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/misc/MultiMap.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/Chunk.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chunk", function() { return Chunk; });\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n// ConvertTo-TS run at 2016-10-04T11:26:45.2799060-07:00\n/**\n * A chunk is either a token tag, a rule tag, or a span of literal text within a\n * tree pattern.\n *\n * The method {@link ParseTreePatternMatcher#split(String)} returns a list of\n * chunks in preparation for creating a token stream by\n * {@link ParseTreePatternMatcher#tokenize(String)}. From there, we get a parse\n * tree from with {@link ParseTreePatternMatcher#compile(String, int)}. These\n * chunks are converted to {@link RuleTagToken}, {@link TokenTagToken}, or the\n * regular tokens of the text surrounding the tags.\n */\nclass Chunk {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vQ2h1bmsuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vQ2h1bmsuanM/MzM4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE2IFRoZSBBTlRMUiBQcm9qZWN0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEJTRC0zLUNsYXVzZSBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbi8vIENvbnZlcnRUby1UUyBydW4gYXQgMjAxNi0xMC0wNFQxMToyNjo0NS4yNzk5MDYwLTA3OjAwXG4vKipcbiAqIEEgY2h1bmsgaXMgZWl0aGVyIGEgdG9rZW4gdGFnLCBhIHJ1bGUgdGFnLCBvciBhIHNwYW4gb2YgbGl0ZXJhbCB0ZXh0IHdpdGhpbiBhXG4gKiB0cmVlIHBhdHRlcm4uXG4gKlxuICogVGhlIG1ldGhvZCB7QGxpbmsgUGFyc2VUcmVlUGF0dGVybk1hdGNoZXIjc3BsaXQoU3RyaW5nKX0gcmV0dXJucyBhIGxpc3Qgb2ZcbiAqIGNodW5rcyBpbiBwcmVwYXJhdGlvbiBmb3IgY3JlYXRpbmcgYSB0b2tlbiBzdHJlYW0gYnlcbiAqIHtAbGluayBQYXJzZVRyZWVQYXR0ZXJuTWF0Y2hlciN0b2tlbml6ZShTdHJpbmcpfS4gRnJvbSB0aGVyZSwgd2UgZ2V0IGEgcGFyc2VcbiAqIHRyZWUgZnJvbSB3aXRoIHtAbGluayBQYXJzZVRyZWVQYXR0ZXJuTWF0Y2hlciNjb21waWxlKFN0cmluZywgaW50KX0uIFRoZXNlXG4gKiBjaHVua3MgYXJlIGNvbnZlcnRlZCB0byB7QGxpbmsgUnVsZVRhZ1Rva2VufSwge0BsaW5rIFRva2VuVGFnVG9rZW59LCBvciB0aGVcbiAqIHJlZ3VsYXIgdG9rZW5zIG9mIHRoZSB0ZXh0IHN1cnJvdW5kaW5nIHRoZSB0YWdzLlxuICovXG5leHBvcnQgY2xhc3MgQ2h1bmsge1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/Chunk.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/ParseTreeMatch.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseTreeMatch", function() { return ParseTreeMatch; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n/**\n * Represents the result of matching a {@link ParseTree} against a tree pattern.\n */\nlet ParseTreeMatch = class ParseTreeMatch {\n    /**\n     * Constructs a new instance of {@link ParseTreeMatch} from the specified\n     * parse tree and pattern.\n     *\n     * @param tree The parse tree to match against the pattern.\n     * @param pattern The parse tree pattern.\n     * @param labels A mapping from label names to collections of\n     * {@link ParseTree} objects located by the tree pattern matching process.\n     * @param mismatchedNode The first node which failed to match the tree\n     * pattern during the matching process.\n     *\n     * @throws {@link Error} if `tree` is not defined\n     * @throws {@link Error} if `pattern` is not defined\n     * @throws {@link Error} if `labels` is not defined\n     */\n    constructor(tree, pattern, labels, mismatchedNode) {\n        if (!tree) {\n            throw new Error("tree cannot be null");\n        }\n        if (!pattern) {\n            throw new Error("pattern cannot be null");\n        }\n        if (!labels) {\n            throw new Error("labels cannot be null");\n        }\n        this._tree = tree;\n        this._pattern = pattern;\n        this._labels = labels;\n        this._mismatchedNode = mismatchedNode;\n    }\n    /**\n     * Get the last node associated with a specific `label`.\n     *\n     * For example, for pattern `<id:ID>`, `get("id")` returns the\n     * node matched for that `ID`. If more than one node\n     * matched the specified label, only the last is returned. If there is\n     * no node associated with the label, this returns `undefined`.\n     *\n     * Pattern tags like `<ID>` and `<expr>` without labels are\n     * considered to be labeled with `ID` and `expr`, respectively.\n     *\n     * @param label The label to check.\n     *\n     * @returns The last {@link ParseTree} to match a tag with the specified\n     * label, or `undefined` if no parse tree matched a tag with the label.\n     */\n    get(label) {\n        let parseTrees = this._labels.get(label);\n        if (!parseTrees || parseTrees.length === 0) {\n            return undefined;\n        }\n        return parseTrees[parseTrees.length - 1]; // return last if multiple\n    }\n    /**\n     * Return all nodes matching a rule or token tag with the specified label.\n     *\n     * If the `label` is the name of a parser rule or token in the\n     * grammar, the resulting list will contain both the parse trees matching\n     * rule or tags explicitly labeled with the label and the complete set of\n     * parse trees matching the labeled and unlabeled tags in the pattern for\n     * the parser rule or token. For example, if `label` is `"foo"`,\n     * the result will contain *all* of the following.\n     *\n     * * Parse tree nodes matching tags of the form `<foo:anyRuleName>` and\n     *   `<foo:AnyTokenName>`.\n     * * Parse tree nodes matching tags of the form `<anyLabel:foo>`.\n     * * Parse tree nodes matching tags of the form `<foo>`.\n     *\n     * @param label The label.\n     *\n     * @returns A collection of all {@link ParseTree} nodes matching tags with\n     * the specified `label`. If no nodes matched the label, an empty list\n     * is returned.\n     */\n    getAll(label) {\n        const nodes = this._labels.get(label);\n        if (!nodes) {\n            return [];\n        }\n        return nodes;\n    }\n    /**\n     * Return a mapping from label &rarr; [list of nodes].\n     *\n     * The map includes special entries corresponding to the names of rules and\n     * tokens referenced in tags in the original pattern. For additional\n     * information, see the description of {@link #getAll(String)}.\n     *\n     * @returns A mapping from labels to parse tree nodes. If the parse tree\n     * pattern did not contain any rule or token tags, this map will be empty.\n     */\n    get labels() {\n        return this._labels;\n    }\n    /**\n     * Get the node at which we first detected a mismatch.\n     *\n     * @returns the node at which we first detected a mismatch, or `undefined`\n     * if the match was successful.\n     */\n    get mismatchedNode() {\n        return this._mismatchedNode;\n    }\n    /**\n     * Gets a value indicating whether the match operation succeeded.\n     *\n     * @returns `true` if the match operation succeeded; otherwise,\n     * `false`.\n     */\n    get succeeded() {\n        return !this._mismatchedNode;\n    }\n    /**\n     * Get the tree pattern we are matching against.\n     *\n     * @returns The tree pattern we are matching against.\n     */\n    get pattern() {\n        return this._pattern;\n    }\n    /**\n     * Get the parse tree we are trying to match to a pattern.\n     *\n     * @returns The {@link ParseTree} we are trying to match to a pattern.\n     */\n    get tree() {\n        return this._tree;\n    }\n    /**\n     * {@inheritDoc}\n     */\n    toString() {\n        return `Match ${this.succeeded ? "succeeded" : "failed"}; found ${this.labels.size} labels`;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"],\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreeMatch.prototype, "getAll", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreeMatch.prototype, "labels", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreeMatch.prototype, "pattern", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreeMatch.prototype, "tree", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], ParseTreeMatch.prototype, "toString", null);\nParseTreeMatch = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]),\n    __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]),\n    __param(2, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreeMatch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/ParseTreeMatch.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePattern.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseTreePattern", function() { return ParseTreePattern; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _xpath_XPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../xpath/XPath */ "../src/typescript-es6/antlr4es6/tree/xpath/XPath.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n/**\n * A pattern like `<ID> = <expr>;` converted to a {@link ParseTree} by\n * {@link ParseTreePatternMatcher#compile(String, int)}.\n */\nlet ParseTreePattern = class ParseTreePattern {\n    /**\n     * Construct a new instance of the {@link ParseTreePattern} class.\n     *\n     * @param matcher The {@link ParseTreePatternMatcher} which created this\n     * tree pattern.\n     * @param pattern The tree pattern in concrete syntax form.\n     * @param patternRuleIndex The parser rule which serves as the root of the\n     * tree pattern.\n     * @param patternTree The tree pattern in {@link ParseTree} form.\n     */\n    constructor(matcher, pattern, patternRuleIndex, patternTree) {\n        this._matcher = matcher;\n        this._patternRuleIndex = patternRuleIndex;\n        this._pattern = pattern;\n        this._patternTree = patternTree;\n    }\n    /**\n     * Match a specific parse tree against this tree pattern.\n     *\n     * @param tree The parse tree to match against this tree pattern.\n     * @returns A {@link ParseTreeMatch} object describing the result of the\n     * match operation. The `ParseTreeMatch.succeeded` method can be\n     * used to determine whether or not the match was successful.\n     */\n    match(tree) {\n        return this._matcher.match(tree, this);\n    }\n    /**\n     * Determine whether or not a parse tree matches this tree pattern.\n     *\n     * @param tree The parse tree to match against this tree pattern.\n     * @returns `true` if `tree` is a match for the current tree\n     * pattern; otherwise, `false`.\n     */\n    matches(tree) {\n        return this._matcher.match(tree, this).succeeded;\n    }\n    /**\n     * Find all nodes using XPath and then try to match those subtrees against\n     * this tree pattern.\n     *\n     * @param tree The {@link ParseTree} to match against this pattern.\n     * @param xpath An expression matching the nodes\n     *\n     * @returns A collection of {@link ParseTreeMatch} objects describing the\n     * successful matches. Unsuccessful matches are omitted from the result,\n     * regardless of the reason for the failure.\n     */\n    findAll(tree, xpath) {\n        let subtrees = _xpath_XPath__WEBPACK_IMPORTED_MODULE_1__["XPath"].findAll(tree, xpath, this._matcher.parser);\n        let matches = [];\n        for (let t of subtrees) {\n            let match = this.match(t);\n            if (match.succeeded) {\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    /**\n     * Get the {@link ParseTreePatternMatcher} which created this tree pattern.\n     *\n     * @returns The {@link ParseTreePatternMatcher} which created this tree\n     * pattern.\n     */\n    get matcher() {\n        return this._matcher;\n    }\n    /**\n     * Get the tree pattern in concrete syntax form.\n     *\n     * @returns The tree pattern in concrete syntax form.\n     */\n    get pattern() {\n        return this._pattern;\n    }\n    /**\n     * Get the parser rule which serves as the outermost rule for the tree\n     * pattern.\n     *\n     * @returns The parser rule which serves as the outermost rule for the tree\n     * pattern.\n     */\n    get patternRuleIndex() {\n        return this._patternRuleIndex;\n    }\n    /**\n     * Get the tree pattern as a {@link ParseTree}. The rule and token tags from\n     * the pattern are present in the parse tree as terminal nodes with a symbol\n     * of type {@link RuleTagToken} or {@link TokenTagToken}.\n     *\n     * @returns The tree pattern as a {@link ParseTree}.\n     */\n    get patternTree() {\n        return this._patternTree;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "_pattern", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "_patternTree", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "_matcher", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"],\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreePattern.prototype, "match", null);\n__decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreePattern.prototype, "matches", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"],\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]), __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreePattern.prototype, "findAll", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "matcher", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "pattern", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], ParseTreePattern.prototype, "patternTree", null);\nParseTreePattern = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]),\n    __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]),\n    __param(3, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], ParseTreePattern);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePattern.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePatternMatcher.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseTreePatternMatcher", function() { return ParseTreePatternMatcher; });\n/* harmony import */ var _BailErrorStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../BailErrorStrategy */ "../src/typescript-es6/antlr4es6/BailErrorStrategy.js");\n/* harmony import */ var _CharStreams__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../CharStreams */ "../src/typescript-es6/antlr4es6/CharStreams.js");\n/* harmony import */ var _CommonTokenStream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../CommonTokenStream */ "../src/typescript-es6/antlr4es6/CommonTokenStream.js");\n/* harmony import */ var _ListTokenSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ListTokenSource */ "../src/typescript-es6/antlr4es6/ListTokenSource.js");\n/* harmony import */ var _misc_MultiMap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../misc/MultiMap */ "../src/typescript-es6/antlr4es6/misc/MultiMap.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _misc_ParseCancellationException__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../misc/ParseCancellationException */ "../src/typescript-es6/antlr4es6/misc/ParseCancellationException.js");\n/* harmony import */ var _ParserInterpreter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../ParserInterpreter */ "../src/typescript-es6/antlr4es6/ParserInterpreter.js");\n/* harmony import */ var _ParserRuleContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../ParserRuleContext */ "../src/typescript-es6/antlr4es6/ParserRuleContext.js");\n/* harmony import */ var _ParseTreeMatch__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ParseTreeMatch */ "../src/typescript-es6/antlr4es6/tree/pattern/ParseTreeMatch.js");\n/* harmony import */ var _ParseTreePattern__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ParseTreePattern */ "../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePattern.js");\n/* harmony import */ var _RecognitionException__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../RecognitionException */ "../src/typescript-es6/antlr4es6/RecognitionException.js");\n/* harmony import */ var _RuleNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../RuleNode */ "../src/typescript-es6/antlr4es6/tree/RuleNode.js");\n/* harmony import */ var _RuleTagToken__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./RuleTagToken */ "../src/typescript-es6/antlr4es6/tree/pattern/RuleTagToken.js");\n/* harmony import */ var _TagChunk__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./TagChunk */ "../src/typescript-es6/antlr4es6/tree/pattern/TagChunk.js");\n/* harmony import */ var _TerminalNode__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../TerminalNode */ "../src/typescript-es6/antlr4es6/tree/TerminalNode.js");\n/* harmony import */ var _TextChunk__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./TextChunk */ "../src/typescript-es6/antlr4es6/tree/pattern/TextChunk.js");\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../Token */ "../src/typescript-es6/antlr4es6/Token.js");\n/* harmony import */ var _TokenTagToken__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./TokenTagToken */ "../src/typescript-es6/antlr4es6/tree/pattern/TokenTagToken.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A tree pattern matching mechanism for ANTLR {@link ParseTree}s.\n *\n * Patterns are strings of source input text with special tags representing\n * token or rule references such as:\n *\n * ```\n * <ID> = <expr>;\n * ```\n *\n * Given a pattern start rule such as `statement`, this object constructs\n * a {@link ParseTree} with placeholders for the `ID` and `expr`\n * subtree. Then the {@link #match} routines can compare an actual\n * {@link ParseTree} from a parse with this pattern. Tag `<ID>` matches\n * any `ID` token and tag `<expr>` references the result of the\n * `expr` rule (generally an instance of `ExprContext`.\n *\n * Pattern `x = 0;` is a similar pattern that matches the same pattern\n * except that it requires the identifier to be `x` and the expression to\n * be `0`.\n *\n * The {@link #matches} routines return `true` or `false` based\n * upon a match for the tree rooted at the parameter sent in. The\n * {@link #match} routines return a {@link ParseTreeMatch} object that\n * contains the parse tree, the parse tree pattern, and a map from tag name to\n * matched nodes (more below). A subtree that fails to match, returns with\n * {@link ParseTreeMatch#mismatchedNode} set to the first tree node that did not\n * match.\n *\n * For efficiency, you can compile a tree pattern in string form to a\n * {@link ParseTreePattern} object.\n *\n * See `TestParseTreeMatcher` for lots of examples.\n * {@link ParseTreePattern} has two static helper methods:\n * {@link ParseTreePattern#findAll} and {@link ParseTreePattern#match} that\n * are easy to use but not super efficient because they create new\n * {@link ParseTreePatternMatcher} objects each time and have to compile the\n * pattern in string form before using it.\n *\n * The lexer and parser that you pass into the {@link ParseTreePatternMatcher}\n * constructor are used to parse the pattern in string form. The lexer converts\n * the `<ID> = <expr>;` into a sequence of four tokens (assuming lexer\n * throws out whitespace or puts it on a hidden channel). Be aware that the\n * input stream is reset for the lexer (but not the parser; a\n * {@link ParserInterpreter} is created to parse the input.). Any user-defined\n * fields you have put into the lexer might get changed when this mechanism asks\n * it to scan the pattern string.\n *\n * Normally a parser does not accept token `<expr>` as a valid\n * `expr` but, from the parser passed in, we create a special version of\n * the underlying grammar representation (an {@link ATN}) that allows imaginary\n * tokens representing rules (`<expr>`) to match entire rules. We call\n * these *bypass alternatives*.\n *\n * Delimiters are `<`} and `>`}, with `\\` as the escape string\n * by default, but you can set them to whatever you want using\n * {@link #setDelimiters}. You must escape both start and stop strings\n * `\\<` and `\\>`.\n */\nclass ParseTreePatternMatcher {\n    /**\n     * Constructs a {@link ParseTreePatternMatcher} or from a {@link Lexer} and\n     * {@link Parser} object. The lexer input stream is altered for tokenizing\n     * the tree patterns. The parser is used as a convenient mechanism to get\n     * the grammar name, plus token, rule names.\n     */\n    constructor(lexer, parser) {\n        this.start = "<";\n        this.stop = ">";\n        this.escape = "\\\\"; // e.g., \\< and \\> must escape BOTH!\n        /**\n         * Regular expression corresponding to escape, for global replace\n         */\n        this.escapeRE = /\\\\/g;\n        this._lexer = lexer;\n        this._parser = parser;\n    }\n    /**\n     * Set the delimiters used for marking rule and token tags within concrete\n     * syntax used by the tree pattern parser.\n     *\n     * @param start The start delimiter.\n     * @param stop The stop delimiter.\n     * @param escapeLeft The escape sequence to use for escaping a start or stop delimiter.\n     *\n     * @throws {@link Error} if `start` is not defined or empty.\n     * @throws {@link Error} if `stop` is not defined or empty.\n     */\n    setDelimiters(start, stop, escapeLeft) {\n        if (!start) {\n            throw new Error("start cannot be null or empty");\n        }\n        if (!stop) {\n            throw new Error("stop cannot be null or empty");\n        }\n        this.start = start;\n        this.stop = stop;\n        this.escape = escapeLeft;\n        this.escapeRE = new RegExp(escapeLeft.replace(/[.*+?^${}()|[\\]\\\\]/g, "\\\\$&"), "g");\n    }\n    matches(tree, pattern, patternRuleIndex = 0) {\n        if (typeof pattern === "string") {\n            let p = this.compile(pattern, patternRuleIndex);\n            return this.matches(tree, p);\n        }\n        else {\n            let labels = new _misc_MultiMap__WEBPACK_IMPORTED_MODULE_4__["MultiMap"]();\n            let mismatchedNode = this.matchImpl(tree, pattern.patternTree, labels);\n            return !mismatchedNode;\n        }\n    }\n    // Implementation of match\n    match(tree, pattern, patternRuleIndex = 0) {\n        if (typeof pattern === "string") {\n            let p = this.compile(pattern, patternRuleIndex);\n            return this.match(tree, p);\n        }\n        else {\n            let labels = new _misc_MultiMap__WEBPACK_IMPORTED_MODULE_4__["MultiMap"]();\n            let mismatchedNode = this.matchImpl(tree, pattern.patternTree, labels);\n            return new _ParseTreeMatch__WEBPACK_IMPORTED_MODULE_9__["ParseTreeMatch"](tree, pattern, labels, mismatchedNode);\n        }\n    }\n    /**\n     * For repeated use of a tree pattern, compile it to a\n     * {@link ParseTreePattern} using this method.\n     */\n    compile(pattern, patternRuleIndex) {\n        let tokenList = this.tokenize(pattern);\n        let tokenSrc = new _ListTokenSource__WEBPACK_IMPORTED_MODULE_3__["ListTokenSource"](tokenList);\n        let tokens = new _CommonTokenStream__WEBPACK_IMPORTED_MODULE_2__["CommonTokenStream"](tokenSrc);\n        const parser = this._parser;\n        let parserInterp = new _ParserInterpreter__WEBPACK_IMPORTED_MODULE_7__["ParserInterpreter"](parser.grammarFileName, parser.vocabulary, parser.ruleNames, parser.getATNWithBypassAlts(), tokens);\n        let tree;\n        try {\n            parserInterp.errorHandler = new _BailErrorStrategy__WEBPACK_IMPORTED_MODULE_0__["BailErrorStrategy"]();\n            tree = parserInterp.parse(patternRuleIndex);\n            //\t\t\tSystem.out.println("pattern tree = "+tree.toStringTree(parserInterp));\n        }\n        catch (e) {\n            if (e instanceof _misc_ParseCancellationException__WEBPACK_IMPORTED_MODULE_6__["ParseCancellationException"]) {\n                throw e.getCause();\n            }\n            else if (e instanceof _RecognitionException__WEBPACK_IMPORTED_MODULE_11__["RecognitionException"]) {\n                throw e;\n            }\n            else if (e instanceof Error) {\n                throw new ParseTreePatternMatcher.CannotInvokeStartRule(e);\n            }\n            else {\n                throw e;\n            }\n        }\n        // Make sure tree pattern compilation checks for a complete parse\n        if (tokens.LA(1) !== _Token__WEBPACK_IMPORTED_MODULE_17__["Token"].EOF) {\n            throw new ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern();\n        }\n        return new _ParseTreePattern__WEBPACK_IMPORTED_MODULE_10__["ParseTreePattern"](this, pattern, patternRuleIndex, tree);\n    }\n    /**\n     * Used to convert the tree pattern string into a series of tokens. The\n     * input stream is reset.\n     */\n    get lexer() {\n        return this._lexer;\n    }\n    /**\n     * Used to collect to the grammar file name, token names, rule names for\n     * used to parse the pattern into a parse tree.\n     */\n    get parser() {\n        return this._parser;\n    }\n    // ---- SUPPORT CODE ----\n    /**\n     * Recursively walk `tree` against `patternTree`, filling\n     * `match.`{@link ParseTreeMatch#labels labels}.\n     *\n     * @returns the first node encountered in `tree` which does not match\n     * a corresponding node in `patternTree`, or `undefined` if the match\n     * was successful. The specific node returned depends on the matching\n     * algorithm used by the implementation, and may be overridden.\n     */\n    matchImpl(tree, patternTree, labels) {\n        if (!tree) {\n            throw new TypeError("tree cannot be null");\n        }\n        if (!patternTree) {\n            throw new TypeError("patternTree cannot be null");\n        }\n        // x and <ID>, x and y, or x and x; or could be mismatched types\n        if (tree instanceof _TerminalNode__WEBPACK_IMPORTED_MODULE_15__["TerminalNode"] && patternTree instanceof _TerminalNode__WEBPACK_IMPORTED_MODULE_15__["TerminalNode"]) {\n            let mismatchedNode;\n            // both are tokens and they have same type\n            if (tree.symbol.type === patternTree.symbol.type) {\n                if (patternTree.symbol instanceof _TokenTagToken__WEBPACK_IMPORTED_MODULE_18__["TokenTagToken"]) { // x and <ID>\n                    let tokenTagToken = patternTree.symbol;\n                    // track label->list-of-nodes for both token name and label (if any)\n                    labels.map(tokenTagToken.tokenName, tree);\n                    const l = tokenTagToken.label;\n                    if (l) {\n                        labels.map(l, tree);\n                    }\n                }\n                else if (tree.text === patternTree.text) {\n                    // x and x\n                }\n                else {\n                    // x and y\n                    if (!mismatchedNode) {\n                        mismatchedNode = tree;\n                    }\n                }\n            }\n            else {\n                if (!mismatchedNode) {\n                    mismatchedNode = tree;\n                }\n            }\n            return mismatchedNode;\n        }\n        if (tree instanceof _ParserRuleContext__WEBPACK_IMPORTED_MODULE_8__["ParserRuleContext"]\n            && patternTree instanceof _ParserRuleContext__WEBPACK_IMPORTED_MODULE_8__["ParserRuleContext"]) {\n            let mismatchedNode;\n            // (expr ...) and <expr>\n            let ruleTagToken = this.getRuleTagToken(patternTree);\n            if (ruleTagToken) {\n                let m;\n                if (tree.ruleContext.ruleIndex === patternTree.ruleContext.ruleIndex) {\n                    // track label->list-of-nodes for both rule name and label (if any)\n                    labels.map(ruleTagToken.ruleName, tree);\n                    const l = ruleTagToken.label;\n                    if (l) {\n                        labels.map(l, tree);\n                    }\n                }\n                else {\n                    if (!mismatchedNode) {\n                        mismatchedNode = tree;\n                    }\n                }\n                return mismatchedNode;\n            }\n            // (expr ...) and (expr ...)\n            if (tree.childCount !== patternTree.childCount) {\n                if (!mismatchedNode) {\n                    mismatchedNode = tree;\n                }\n                return mismatchedNode;\n            }\n            let n = tree.childCount;\n            for (let i = 0; i < n; i++) {\n                let childMatch = this.matchImpl(tree.getChild(i), patternTree.getChild(i), labels);\n                if (childMatch) {\n                    return childMatch;\n                }\n            }\n            return mismatchedNode;\n        }\n        // if nodes aren\'t both tokens or both rule nodes, can\'t match\n        return tree;\n    }\n    /** Is `t` `(expr <expr>)` subtree? */\n    getRuleTagToken(t) {\n        if (t instanceof _RuleNode__WEBPACK_IMPORTED_MODULE_12__["RuleNode"]) {\n            if (t.childCount === 1 && t.getChild(0) instanceof _TerminalNode__WEBPACK_IMPORTED_MODULE_15__["TerminalNode"]) {\n                let c = t.getChild(0);\n                if (c.symbol instanceof _RuleTagToken__WEBPACK_IMPORTED_MODULE_13__["RuleTagToken"]) {\n                    //\t\t\t\t\tSystem.out.println("rule tag subtree "+t.toStringTree(parser));\n                    return c.symbol;\n                }\n            }\n        }\n        return undefined;\n    }\n    tokenize(pattern) {\n        // split pattern into chunks: sea (raw input) and islands (<ID>, <expr>)\n        let chunks = this.split(pattern);\n        // create token stream from text and tags\n        let tokens = [];\n        for (let chunk of chunks) {\n            if (chunk instanceof _TagChunk__WEBPACK_IMPORTED_MODULE_14__["TagChunk"]) {\n                let tagChunk = chunk;\n                const firstChar = tagChunk.tag.substr(0, 1);\n                // add special rule token or conjure up new token from name\n                if (firstChar === firstChar.toUpperCase()) {\n                    let ttype = this._parser.getTokenType(tagChunk.tag);\n                    if (ttype === _Token__WEBPACK_IMPORTED_MODULE_17__["Token"].INVALID_TYPE) {\n                        throw new Error("Unknown token " + tagChunk.tag + " in pattern: " + pattern);\n                    }\n                    let t = new _TokenTagToken__WEBPACK_IMPORTED_MODULE_18__["TokenTagToken"](tagChunk.tag, ttype, tagChunk.label);\n                    tokens.push(t);\n                }\n                else if (firstChar === firstChar.toLowerCase()) {\n                    let ruleIndex = this._parser.getRuleIndex(tagChunk.tag);\n                    if (ruleIndex === -1) {\n                        throw new Error("Unknown rule " + tagChunk.tag + " in pattern: " + pattern);\n                    }\n                    let ruleImaginaryTokenType = this._parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];\n                    tokens.push(new _RuleTagToken__WEBPACK_IMPORTED_MODULE_13__["RuleTagToken"](tagChunk.tag, ruleImaginaryTokenType, tagChunk.label));\n                }\n                else {\n                    throw new Error("invalid tag: " + tagChunk.tag + " in pattern: " + pattern);\n                }\n            }\n            else {\n                let textChunk = chunk;\n                this._lexer.inputStream = _CharStreams__WEBPACK_IMPORTED_MODULE_1__["CharStreams"].fromString(textChunk.text);\n                let t = this._lexer.nextToken();\n                while (t.type !== _Token__WEBPACK_IMPORTED_MODULE_17__["Token"].EOF) {\n                    tokens.push(t);\n                    t = this._lexer.nextToken();\n                }\n            }\n        }\n        //\t\tSystem.out.println("tokens="+tokens);\n        return tokens;\n    }\n    /** Split `<ID> = <e:expr> ;` into 4 chunks for tokenizing by {@link #tokenize}. */\n    split(pattern) {\n        let p = 0;\n        let n = pattern.length;\n        let chunks = [];\n        let buf;\n        // find all start and stop indexes first, then collect\n        let starts = [];\n        let stops = [];\n        while (p < n) {\n            if (p === pattern.indexOf(this.escape + this.start, p)) {\n                p += this.escape.length + this.start.length;\n            }\n            else if (p === pattern.indexOf(this.escape + this.stop, p)) {\n                p += this.escape.length + this.stop.length;\n            }\n            else if (p === pattern.indexOf(this.start, p)) {\n                starts.push(p);\n                p += this.start.length;\n            }\n            else if (p === pattern.indexOf(this.stop, p)) {\n                stops.push(p);\n                p += this.stop.length;\n            }\n            else {\n                p++;\n            }\n        }\n        //\t\tSystem.out.println("");\n        //\t\tSystem.out.println(starts);\n        //\t\tSystem.out.println(stops);\n        if (starts.length > stops.length) {\n            throw new Error("unterminated tag in pattern: " + pattern);\n        }\n        if (starts.length < stops.length) {\n            throw new Error("missing start tag in pattern: " + pattern);\n        }\n        let ntags = starts.length;\n        for (let i = 0; i < ntags; i++) {\n            if (starts[i] >= stops[i]) {\n                throw new Error("tag delimiters out of order in pattern: " + pattern);\n            }\n        }\n        // collect into chunks now\n        if (ntags === 0) {\n            let text = pattern.substring(0, n);\n            chunks.push(new _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"](text));\n        }\n        if (ntags > 0 && starts[0] > 0) { // copy text up to first tag into chunks\n            let text = pattern.substring(0, starts[0]);\n            chunks.push(new _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"](text));\n        }\n        for (let i = 0; i < ntags; i++) {\n            // copy inside of <tag>\n            let tag = pattern.substring(starts[i] + this.start.length, stops[i]);\n            let ruleOrToken = tag;\n            let label;\n            let colon = tag.indexOf(":");\n            if (colon >= 0) {\n                label = tag.substring(0, colon);\n                ruleOrToken = tag.substring(colon + 1, tag.length);\n            }\n            chunks.push(new _TagChunk__WEBPACK_IMPORTED_MODULE_14__["TagChunk"](ruleOrToken, label));\n            if (i + 1 < ntags) {\n                // copy from end of <tag> to start of next\n                let text = pattern.substring(stops[i] + this.stop.length, starts[i + 1]);\n                chunks.push(new _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"](text));\n            }\n        }\n        if (ntags > 0) {\n            let afterLastTag = stops[ntags - 1] + this.stop.length;\n            if (afterLastTag < n) { // copy text from end of last tag to end\n                let text = pattern.substring(afterLastTag, n);\n                chunks.push(new _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"](text));\n            }\n        }\n        // strip out the escape sequences from text chunks but not tags\n        for (let i = 0; i < chunks.length; i++) {\n            let c = chunks[i];\n            if (c instanceof _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"]) {\n                let unescaped = c.text.replace(this.escapeRE, "");\n                if (unescaped.length < c.text.length) {\n                    chunks[i] = new _TextChunk__WEBPACK_IMPORTED_MODULE_16__["TextChunk"](unescaped);\n                }\n            }\n        }\n        return chunks;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"],\n    __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"])\n], ParseTreePatternMatcher.prototype, "match", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"]\n], ParseTreePatternMatcher.prototype, "lexer", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"]\n], ParseTreePatternMatcher.prototype, "parser", null);\n__decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"]),\n    __param(1, _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"]),\n    __param(2, _Decorators__WEBPACK_IMPORTED_MODULE_5__["NotNull"])\n], ParseTreePatternMatcher.prototype, "matchImpl", null);\n(function (ParseTreePatternMatcher) {\n    class CannotInvokeStartRule extends Error {\n        constructor(error) {\n            super(`CannotInvokeStartRule: ${error}`);\n            this.error = error;\n        }\n    }\n    ParseTreePatternMatcher.CannotInvokeStartRule = CannotInvokeStartRule;\n    // Fixes https://github.com/antlr/antlr4/issues/413\n    // "Tree pattern compilation doesn\'t check for a complete parse"\n    class StartRuleDoesNotConsumeFullPattern extends Error {\n        constructor() {\n            super("StartRuleDoesNotConsumeFullPattern");\n        }\n    }\n    ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern = StartRuleDoesNotConsumeFullPattern;\n})(ParseTreePatternMatcher || (ParseTreePatternMatcher = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/ParseTreePatternMatcher.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/RuleTagToken.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleTagToken", function() { return RuleTagToken; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Token */ "../src/typescript-es6/antlr4es6/Token.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n/**\n * A {@link Token} object representing an entire subtree matched by a parser\n * rule; e.g., `<expr>`. These tokens are created for {@link TagChunk}\n * chunks where the tag corresponds to a parser rule.\n */\nlet RuleTagToken = class RuleTagToken {\n    /**\n     * Constructs a new instance of {@link RuleTagToken} with the specified rule\n     * name, bypass token type, and label.\n     *\n     * @param ruleName The name of the parser rule this rule tag matches.\n     * @param bypassTokenType The bypass token type assigned to the parser rule.\n     * @param label The label associated with the rule tag, or `undefined` if\n     * the rule tag is unlabeled.\n     *\n     * @exception IllegalArgumentException if `ruleName` is not defined\n     * or empty.\n     */\n    constructor(ruleName, bypassTokenType, label) {\n        if (ruleName == null || ruleName.length === 0) {\n            throw new Error("ruleName cannot be null or empty.");\n        }\n        this._ruleName = ruleName;\n        this.bypassTokenType = bypassTokenType;\n        this._label = label;\n    }\n    /**\n     * Gets the name of the rule associated with this rule tag.\n     *\n     * @returns The name of the parser rule associated with this rule tag.\n     */\n    get ruleName() {\n        return this._ruleName;\n    }\n    /**\n     * Gets the label associated with the rule tag.\n     *\n     * @returns The name of the label associated with the rule tag, or\n     * `undefined` if this is an unlabeled rule tag.\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * Rule tag tokens are always placed on the {@link #DEFAULT_CHANNEL}.\n     */\n    get channel() {\n        return _Token__WEBPACK_IMPORTED_MODULE_1__["Token"].DEFAULT_CHANNEL;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * This method returns the rule tag formatted with `<` and `>`\n     * delimiters.\n     */\n    get text() {\n        if (this._label != null) {\n            return "<" + this._label + ":" + this._ruleName + ">";\n        }\n        return "<" + this._ruleName + ">";\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * Rule tag tokens have types assigned according to the rule bypass\n     * transitions created during ATN deserialization.\n     */\n    get type() {\n        return this.bypassTokenType;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns 0.\n     */\n    get line() {\n        return 0;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns -1.\n     */\n    get charPositionInLine() {\n        return -1;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns -1.\n     */\n    get tokenIndex() {\n        return -1;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns -1.\n     */\n    get startIndex() {\n        return -1;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns -1.\n     */\n    get stopIndex() {\n        return -1;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns `undefined`.\n     */\n    get tokenSource() {\n        return undefined;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} always returns `undefined`.\n     */\n    get inputStream() {\n        return undefined;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link RuleTagToken} returns a string of the form\n     * `ruleName:bypassTokenType`.\n     */\n    toString() {\n        return this._ruleName + ":" + this.bypassTokenType;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"]\n], RuleTagToken.prototype, "ruleName", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "channel", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "text", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "type", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "line", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "charPositionInLine", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "tokenIndex", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "startIndex", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "stopIndex", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "tokenSource", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "inputStream", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], RuleTagToken.prototype, "toString", null);\nRuleTagToken = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_0__["NotNull"])\n], RuleTagToken);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/RuleTagToken.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/TagChunk.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagChunk", function() { return TagChunk; });\n/* harmony import */ var _Chunk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chunk */ "../src/typescript-es6/antlr4es6/tree/pattern/Chunk.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// ConvertTo-TS run at 2016-10-04T11:26:46.1670669-07:00\n\n\n/**\n * Represents a placeholder tag in a tree pattern. A tag can have any of the\n * following forms.\n *\n * * `expr`: An unlabeled placeholder for a parser rule `expr`.\n * * `ID`: An unlabeled placeholder for a token of type `ID`.\n * * `e:expr`: A labeled placeholder for a parser rule `expr`.\n * * `id:ID`: A labeled placeholder for a token of type `ID`.\n *\n * This class does not perform any validation on the tag or label names aside\n * from ensuring that the tag is a defined, non-empty string.\n */\nclass TagChunk extends _Chunk__WEBPACK_IMPORTED_MODULE_0__["Chunk"] {\n    /**\n     * Construct a new instance of {@link TagChunk} using the specified label\n     * and tag.\n     *\n     * @param label The label for the tag. If this is `undefined`, the\n     * {@link TagChunk} represents an unlabeled tag.\n     * @param tag The tag, which should be the name of a parser rule or token\n     * type.\n     *\n     * @exception IllegalArgumentException if `tag` is not defined or\n     * empty.\n     */\n    constructor(tag, label) {\n        super();\n        if (tag == null || tag.length === 0) {\n            throw new Error("tag cannot be null or empty");\n        }\n        this._tag = tag;\n        this._label = label;\n    }\n    /**\n     * Get the tag for this chunk.\n     *\n     * @returns The tag for the chunk.\n     */\n    get tag() {\n        return this._tag;\n    }\n    /**\n     * Get the label, if any, assigned to this chunk.\n     *\n     * @returns The label assigned to this chunk, or `undefined` if no label is\n     * assigned to the chunk.\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * This method returns a text representation of the tag chunk. Labeled tags\n     * are returned in the form `label:tag`, and unlabeled tags are\n     * returned as just the tag name.\n     */\n    toString() {\n        if (this._label != null) {\n            return this._label + ":" + this._tag;\n        }\n        return this._tag;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"]\n], TagChunk.prototype, "tag", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], TagChunk.prototype, "toString", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vVGFnQ2h1bmsuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vVGFnQ2h1bmsuanM/ODA0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE2IFRoZSBBTlRMUiBQcm9qZWN0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEJTRC0zLUNsYXVzZSBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbi8vIENvbnZlcnRUby1UUyBydW4gYXQgMjAxNi0xMC0wNFQxMToyNjo0Ni4xNjcwNjY5LTA3OjAwXG5pbXBvcnQgeyBDaHVuayB9IGZyb20gXCIuL0NodW5rXCI7XG5pbXBvcnQgeyBOb3ROdWxsLCBPdmVycmlkZSB9IGZyb20gXCIuLi8uLi9EZWNvcmF0b3JzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBwbGFjZWhvbGRlciB0YWcgaW4gYSB0cmVlIHBhdHRlcm4uIEEgdGFnIGNhbiBoYXZlIGFueSBvZiB0aGVcbiAqIGZvbGxvd2luZyBmb3Jtcy5cbiAqXG4gKiAqIGBleHByYDogQW4gdW5sYWJlbGVkIHBsYWNlaG9sZGVyIGZvciBhIHBhcnNlciBydWxlIGBleHByYC5cbiAqICogYElEYDogQW4gdW5sYWJlbGVkIHBsYWNlaG9sZGVyIGZvciBhIHRva2VuIG9mIHR5cGUgYElEYC5cbiAqICogYGU6ZXhwcmA6IEEgbGFiZWxlZCBwbGFjZWhvbGRlciBmb3IgYSBwYXJzZXIgcnVsZSBgZXhwcmAuXG4gKiAqIGBpZDpJRGA6IEEgbGFiZWxlZCBwbGFjZWhvbGRlciBmb3IgYSB0b2tlbiBvZiB0eXBlIGBJRGAuXG4gKlxuICogVGhpcyBjbGFzcyBkb2VzIG5vdCBwZXJmb3JtIGFueSB2YWxpZGF0aW9uIG9uIHRoZSB0YWcgb3IgbGFiZWwgbmFtZXMgYXNpZGVcbiAqIGZyb20gZW5zdXJpbmcgdGhhdCB0aGUgdGFnIGlzIGEgZGVmaW5lZCwgbm9uLWVtcHR5IHN0cmluZy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRhZ0NodW5rIGV4dGVuZHMgQ2h1bmsge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIG5ldyBpbnN0YW5jZSBvZiB7QGxpbmsgVGFnQ2h1bmt9IHVzaW5nIHRoZSBzcGVjaWZpZWQgbGFiZWxcbiAgICAgKiBhbmQgdGFnLlxuICAgICAqXG4gICAgICogQHBhcmFtIGxhYmVsIFRoZSBsYWJlbCBmb3IgdGhlIHRhZy4gSWYgdGhpcyBpcyBgdW5kZWZpbmVkYCwgdGhlXG4gICAgICoge0BsaW5rIFRhZ0NodW5rfSByZXByZXNlbnRzIGFuIHVubGFiZWxlZCB0YWcuXG4gICAgICogQHBhcmFtIHRhZyBUaGUgdGFnLCB3aGljaCBzaG91bGQgYmUgdGhlIG5hbWUgb2YgYSBwYXJzZXIgcnVsZSBvciB0b2tlblxuICAgICAqIHR5cGUuXG4gICAgICpcbiAgICAgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiBgdGFnYCBpcyBub3QgZGVmaW5lZCBvclxuICAgICAqIGVtcHR5LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRhZywgbGFiZWwpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHRhZyA9PSBudWxsIHx8IHRhZy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRhZyBjYW5ub3QgYmUgbnVsbCBvciBlbXB0eVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl90YWcgPSB0YWc7XG4gICAgICAgIHRoaXMuX2xhYmVsID0gbGFiZWw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgdGFnIGZvciB0aGlzIGNodW5rLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHRhZyBmb3IgdGhlIGNodW5rLlxuICAgICAqL1xuICAgIGdldCB0YWcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90YWc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbGFiZWwsIGlmIGFueSwgYXNzaWduZWQgdG8gdGhpcyBjaHVuay5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSBsYWJlbCBhc3NpZ25lZCB0byB0aGlzIGNodW5rLCBvciBgdW5kZWZpbmVkYCBpZiBubyBsYWJlbCBpc1xuICAgICAqIGFzc2lnbmVkIHRvIHRoZSBjaHVuay5cbiAgICAgKi9cbiAgICBnZXQgbGFiZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sYWJlbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgcmV0dXJucyBhIHRleHQgcmVwcmVzZW50YXRpb24gb2YgdGhlIHRhZyBjaHVuay4gTGFiZWxlZCB0YWdzXG4gICAgICogYXJlIHJldHVybmVkIGluIHRoZSBmb3JtIGBsYWJlbDp0YWdgLCBhbmQgdW5sYWJlbGVkIHRhZ3MgYXJlXG4gICAgICogcmV0dXJuZWQgYXMganVzdCB0aGUgdGFnIG5hbWUuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGlmICh0aGlzLl9sYWJlbCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGFiZWwgKyBcIjpcIiArIHRoaXMuX3RhZztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fdGFnO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIE5vdE51bGxcbl0sIFRhZ0NodW5rLnByb3RvdHlwZSwgXCJ0YWdcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdmVycmlkZVxuXSwgVGFnQ2h1bmsucHJvdG90eXBlLCBcInRvU3RyaW5nXCIsIG51bGwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/TagChunk.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/TextChunk.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextChunk", function() { return TextChunk; });\n/* harmony import */ var _Chunk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chunk */ "../src/typescript-es6/antlr4es6/tree/pattern/Chunk.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n// ConvertTo-TS run at 2016-10-04T11:26:46.2521448-07:00\n\n\n/**\n * Represents a span of raw text (concrete syntax) between tags in a tree\n * pattern string.\n */\nlet TextChunk = class TextChunk extends _Chunk__WEBPACK_IMPORTED_MODULE_0__["Chunk"] {\n    /**\n     * Constructs a new instance of {@link TextChunk} with the specified text.\n     *\n     * @param text The text of this chunk.\n     * @exception IllegalArgumentException if `text` is not defined.\n     */\n    constructor(text) {\n        super();\n        if (text == null) {\n            throw new Error("text cannot be null");\n        }\n        this._text = text;\n    }\n    /**\n     * Gets the raw text of this chunk.\n     *\n     * @returns The text of the chunk.\n     */\n    get text() {\n        return this._text;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link TextChunk} returns the result of\n     * `text` in single quotes.\n     */\n    toString() {\n        return "\'" + this._text + "\'";\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"]\n], TextChunk.prototype, "_text", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"]\n], TextChunk.prototype, "text", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], TextChunk.prototype, "toString", null);\nTextChunk = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"])\n], TextChunk);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vVGV4dENodW5rLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvdHJlZS9wYXR0ZXJuL1RleHRDaHVuay5qcz8xZjAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fcGFyYW0gPSAodGhpcyAmJiB0aGlzLl9fcGFyYW0pIHx8IGZ1bmN0aW9uIChwYXJhbUluZGV4LCBkZWNvcmF0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7IGRlY29yYXRvcih0YXJnZXQsIGtleSwgcGFyYW1JbmRleCk7IH1cbn07XG4vLyBDb252ZXJ0VG8tVFMgcnVuIGF0IDIwMTYtMTAtMDRUMTE6MjY6NDYuMjUyMTQ0OC0wNzowMFxuaW1wb3J0IHsgQ2h1bmsgfSBmcm9tIFwiLi9DaHVua1wiO1xuaW1wb3J0IHsgTm90TnVsbCwgT3ZlcnJpZGUgfSBmcm9tIFwiLi4vLi4vRGVjb3JhdG9yc1wiO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgc3BhbiBvZiByYXcgdGV4dCAoY29uY3JldGUgc3ludGF4KSBiZXR3ZWVuIHRhZ3MgaW4gYSB0cmVlXG4gKiBwYXR0ZXJuIHN0cmluZy5cbiAqL1xubGV0IFRleHRDaHVuayA9IGNsYXNzIFRleHRDaHVuayBleHRlbmRzIENodW5rIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGEgbmV3IGluc3RhbmNlIG9mIHtAbGluayBUZXh0Q2h1bmt9IHdpdGggdGhlIHNwZWNpZmllZCB0ZXh0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHRleHQgVGhlIHRleHQgb2YgdGhpcyBjaHVuay5cbiAgICAgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiBgdGV4dGAgaXMgbm90IGRlZmluZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGV4dCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBpZiAodGV4dCA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0ZXh0IGNhbm5vdCBiZSBudWxsXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3RleHQgPSB0ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSByYXcgdGV4dCBvZiB0aGlzIGNodW5rLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHRleHQgb2YgdGhlIGNodW5rLlxuICAgICAqL1xuICAgIGdldCB0ZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICoge0Bpbmhlcml0RG9jfVxuICAgICAqXG4gICAgICogVGhlIGltcGxlbWVudGF0aW9uIGZvciB7QGxpbmsgVGV4dENodW5rfSByZXR1cm5zIHRoZSByZXN1bHQgb2ZcbiAgICAgKiBgdGV4dGAgaW4gc2luZ2xlIHF1b3Rlcy5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFwiJ1wiICsgdGhpcy5fdGV4dCArIFwiJ1wiO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBOb3ROdWxsXG5dLCBUZXh0Q2h1bmsucHJvdG90eXBlLCBcIl90ZXh0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBOb3ROdWxsXG5dLCBUZXh0Q2h1bmsucHJvdG90eXBlLCBcInRleHRcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdmVycmlkZVxuXSwgVGV4dENodW5rLnByb3RvdHlwZSwgXCJ0b1N0cmluZ1wiLCBudWxsKTtcblRleHRDaHVuayA9IF9fZGVjb3JhdGUoW1xuICAgIF9fcGFyYW0oMCwgTm90TnVsbClcbl0sIFRleHRDaHVuayk7XG5leHBvcnQgeyBUZXh0Q2h1bmsgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/TextChunk.js\n')},
"../src/typescript-es6/antlr4es6/tree/pattern/TokenTagToken.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenTagToken", function() { return TokenTagToken; });\n/* harmony import */ var _CommonToken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../CommonToken */ "../src/typescript-es6/antlr4es6/CommonToken.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n// ConvertTo-TS run at 2016-10-04T11:26:46.3281988-07:00\n\n\n/**\n * A {@link Token} object representing a token of a particular type; e.g.,\n * `<ID>`. These tokens are created for {@link TagChunk} chunks where the\n * tag corresponds to a lexer rule or token type.\n */\nlet TokenTagToken = class TokenTagToken extends _CommonToken__WEBPACK_IMPORTED_MODULE_0__["CommonToken"] {\n    /**\n     * Constructs a new instance of {@link TokenTagToken} with the specified\n     * token name, type, and label.\n     *\n     * @param tokenName The token name.\n     * @param type The token type.\n     * @param label The label associated with the token tag, or `undefined` if\n     * the token tag is unlabeled.\n     */\n    constructor(tokenName, type, label) {\n        super(type);\n        this._tokenName = tokenName;\n        this._label = label;\n    }\n    /**\n     * Gets the token name.\n     * @returns The token name.\n     */\n    get tokenName() {\n        return this._tokenName;\n    }\n    /**\n     * Gets the label associated with the rule tag.\n     *\n     * @returns The name of the label associated with the rule tag, or\n     * `undefined` if this is an unlabeled rule tag.\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link TokenTagToken} returns the token tag\n     * formatted with `<` and `>` delimiters.\n     */\n    get text() {\n        if (this._label != null) {\n            return "<" + this._label + ":" + this._tokenName + ">";\n        }\n        return "<" + this._tokenName + ">";\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * The implementation for {@link TokenTagToken} returns a string of the form\n     * `tokenName:type`.\n     */\n    toString() {\n        return this._tokenName + ":" + this.type;\n    }\n};\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"]\n], TokenTagToken.prototype, "_tokenName", void 0);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"]\n], TokenTagToken.prototype, "tokenName", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], TokenTagToken.prototype, "text", null);\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], TokenTagToken.prototype, "toString", null);\nTokenTagToken = __decorate([\n    __param(0, _Decorators__WEBPACK_IMPORTED_MODULE_1__["NotNull"])\n], TokenTagToken);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3BhdHRlcm4vVG9rZW5UYWdUb2tlbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvdHlwZXNjcmlwdC1lczYvYW50bHI0ZXM2L3RyZWUvcGF0dGVybi9Ub2tlblRhZ1Rva2VuLmpzP2JiYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDb3B5cmlnaHQgMjAxNiBUaGUgQU5UTFIgUHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBCU0QtMy1DbGF1c2UgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG52YXIgX19wYXJhbSA9ICh0aGlzICYmIHRoaXMuX19wYXJhbSkgfHwgZnVuY3Rpb24gKHBhcmFtSW5kZXgsIGRlY29yYXRvcikge1xuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHsgZGVjb3JhdG9yKHRhcmdldCwga2V5LCBwYXJhbUluZGV4KTsgfVxufTtcbi8vIENvbnZlcnRUby1UUyBydW4gYXQgMjAxNi0xMC0wNFQxMToyNjo0Ni4zMjgxOTg4LTA3OjAwXG5pbXBvcnQgeyBDb21tb25Ub2tlbiB9IGZyb20gXCIuLi8uLi9Db21tb25Ub2tlblwiO1xuaW1wb3J0IHsgTm90TnVsbCwgT3ZlcnJpZGUgfSBmcm9tIFwiLi4vLi4vRGVjb3JhdG9yc1wiO1xuLyoqXG4gKiBBIHtAbGluayBUb2tlbn0gb2JqZWN0IHJlcHJlc2VudGluZyBhIHRva2VuIG9mIGEgcGFydGljdWxhciB0eXBlOyBlLmcuLFxuICogYDxJRD5gLiBUaGVzZSB0b2tlbnMgYXJlIGNyZWF0ZWQgZm9yIHtAbGluayBUYWdDaHVua30gY2h1bmtzIHdoZXJlIHRoZVxuICogdGFnIGNvcnJlc3BvbmRzIHRvIGEgbGV4ZXIgcnVsZSBvciB0b2tlbiB0eXBlLlxuICovXG5sZXQgVG9rZW5UYWdUb2tlbiA9IGNsYXNzIFRva2VuVGFnVG9rZW4gZXh0ZW5kcyBDb21tb25Ub2tlbiB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhIG5ldyBpbnN0YW5jZSBvZiB7QGxpbmsgVG9rZW5UYWdUb2tlbn0gd2l0aCB0aGUgc3BlY2lmaWVkXG4gICAgICogdG9rZW4gbmFtZSwgdHlwZSwgYW5kIGxhYmVsLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRva2VuTmFtZSBUaGUgdG9rZW4gbmFtZS5cbiAgICAgKiBAcGFyYW0gdHlwZSBUaGUgdG9rZW4gdHlwZS5cbiAgICAgKiBAcGFyYW0gbGFiZWwgVGhlIGxhYmVsIGFzc29jaWF0ZWQgd2l0aCB0aGUgdG9rZW4gdGFnLCBvciBgdW5kZWZpbmVkYCBpZlxuICAgICAqIHRoZSB0b2tlbiB0YWcgaXMgdW5sYWJlbGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRva2VuTmFtZSwgdHlwZSwgbGFiZWwpIHtcbiAgICAgICAgc3VwZXIodHlwZSk7XG4gICAgICAgIHRoaXMuX3Rva2VuTmFtZSA9IHRva2VuTmFtZTtcbiAgICAgICAgdGhpcy5fbGFiZWwgPSBsYWJlbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgdG9rZW4gbmFtZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgdG9rZW4gbmFtZS5cbiAgICAgKi9cbiAgICBnZXQgdG9rZW5OYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdG9rZW5OYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBsYWJlbCBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGUgdGFnLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIG5hbWUgb2YgdGhlIGxhYmVsIGFzc29jaWF0ZWQgd2l0aCB0aGUgcnVsZSB0YWcsIG9yXG4gICAgICogYHVuZGVmaW5lZGAgaWYgdGhpcyBpcyBhbiB1bmxhYmVsZWQgcnVsZSB0YWcuXG4gICAgICovXG4gICAgZ2V0IGxhYmVsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGFiZWw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHtAaW5oZXJpdERvY31cbiAgICAgKlxuICAgICAqIFRoZSBpbXBsZW1lbnRhdGlvbiBmb3Ige0BsaW5rIFRva2VuVGFnVG9rZW59IHJldHVybnMgdGhlIHRva2VuIHRhZ1xuICAgICAqIGZvcm1hdHRlZCB3aXRoIGA8YCBhbmQgYD5gIGRlbGltaXRlcnMuXG4gICAgICovXG4gICAgZ2V0IHRleHQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9sYWJlbCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gXCI8XCIgKyB0aGlzLl9sYWJlbCArIFwiOlwiICsgdGhpcy5fdG9rZW5OYW1lICsgXCI+XCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiPFwiICsgdGhpcy5fdG9rZW5OYW1lICsgXCI+XCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHtAaW5oZXJpdERvY31cbiAgICAgKlxuICAgICAqIFRoZSBpbXBsZW1lbnRhdGlvbiBmb3Ige0BsaW5rIFRva2VuVGFnVG9rZW59IHJldHVybnMgYSBzdHJpbmcgb2YgdGhlIGZvcm1cbiAgICAgKiBgdG9rZW5OYW1lOnR5cGVgLlxuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdG9rZW5OYW1lICsgXCI6XCIgKyB0aGlzLnR5cGU7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIE5vdE51bGxcbl0sIFRva2VuVGFnVG9rZW4ucHJvdG90eXBlLCBcIl90b2tlbk5hbWVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE5vdE51bGxcbl0sIFRva2VuVGFnVG9rZW4ucHJvdG90eXBlLCBcInRva2VuTmFtZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIE92ZXJyaWRlXG5dLCBUb2tlblRhZ1Rva2VuLnByb3RvdHlwZSwgXCJ0ZXh0XCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgT3ZlcnJpZGVcbl0sIFRva2VuVGFnVG9rZW4ucHJvdG90eXBlLCBcInRvU3RyaW5nXCIsIG51bGwpO1xuVG9rZW5UYWdUb2tlbiA9IF9fZGVjb3JhdGUoW1xuICAgIF9fcGFyYW0oMCwgTm90TnVsbClcbl0sIFRva2VuVGFnVG9rZW4pO1xuZXhwb3J0IHsgVG9rZW5UYWdUb2tlbiB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/pattern/TokenTagToken.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPath.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPath", function() { return XPath; });\n/* harmony import */ var _CharStreams__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../CharStreams */ "../src/typescript-es6/antlr4es6/CharStreams.js");\n/* harmony import */ var _CommonTokenStream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../CommonTokenStream */ "../src/typescript-es6/antlr4es6/CommonTokenStream.js");\n/* harmony import */ var _LexerNoViableAltException__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../LexerNoViableAltException */ "../src/typescript-es6/antlr4es6/LexerNoViableAltException.js");\n/* harmony import */ var _ParserRuleContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ParserRuleContext */ "../src/typescript-es6/antlr4es6/ParserRuleContext.js");\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Token */ "../src/typescript-es6/antlr4es6/Token.js");\n/* harmony import */ var _XPathLexer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./XPathLexer */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathLexer.js");\n/* harmony import */ var _XPathLexerErrorListener__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./XPathLexerErrorListener */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathLexerErrorListener.js");\n/* harmony import */ var _XPathRuleAnywhereElement__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./XPathRuleAnywhereElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleAnywhereElement.js");\n/* harmony import */ var _XPathRuleElement__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./XPathRuleElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleElement.js");\n/* harmony import */ var _XPathTokenAnywhereElement__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./XPathTokenAnywhereElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenAnywhereElement.js");\n/* harmony import */ var _XPathTokenElement__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./XPathTokenElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenElement.js");\n/* harmony import */ var _XPathWildcardAnywhereElement__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./XPathWildcardAnywhereElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardAnywhereElement.js");\n/* harmony import */ var _XPathWildcardElement__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./XPathWildcardElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n// ConvertTo-TS run at 2016-10-04T11:26:46.4373888-07:00\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represent a subset of XPath XML path syntax for use in identifying nodes in\n * parse trees.\n *\n * Split path into words and separators `/` and `//` via ANTLR\n * itself then walk path elements from left to right. At each separator-word\n * pair, find set of nodes. Next stage uses those as work list.\n *\n * The basic interface is\n * {@link XPath#findAll ParseTree.findAll}`(tree, pathString, parser)`.\n * But that is just shorthand for:\n *\n * ```\n * let p = new XPath(parser, pathString);\n * return p.evaluate(tree);\n * ```\n *\n * See `TestXPath` for descriptions. In short, this\n * allows operators:\n *\n * | | |\n * | --- | --- |\n * | `/` | root |\n * | `//` | anywhere |\n * | `!` | invert; this much appear directly after root or anywhere operator |\n *\n * and path elements:\n *\n * | | |\n * | --- | --- |\n * | `ID` | token name |\n * | `\'string\'` | any string literal token from the grammar |\n * | `expr` | rule name |\n * | `*` | wildcard matching any node |\n *\n * Whitespace is not allowed.\n */\nclass XPath {\n    constructor(parser, path) {\n        this.parser = parser;\n        this.path = path;\n        this.elements = this.split(path);\n        // console.log(this.elements.toString());\n    }\n    // TODO: check for invalid token/rule names, bad syntax\n    split(path) {\n        let lexer = new _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"](_CharStreams__WEBPACK_IMPORTED_MODULE_0__["CharStreams"].fromString(path));\n        lexer.recover = (e) => { throw e; };\n        lexer.removeErrorListeners();\n        lexer.addErrorListener(new _XPathLexerErrorListener__WEBPACK_IMPORTED_MODULE_6__["XPathLexerErrorListener"]());\n        let tokenStream = new _CommonTokenStream__WEBPACK_IMPORTED_MODULE_1__["CommonTokenStream"](lexer);\n        try {\n            tokenStream.fill();\n        }\n        catch (e) {\n            if (e instanceof _LexerNoViableAltException__WEBPACK_IMPORTED_MODULE_2__["LexerNoViableAltException"]) {\n                let pos = lexer.charPositionInLine;\n                let msg = "Invalid tokens or characters at index " + pos + " in path \'" + path + "\' -- " + e.message;\n                throw new RangeError(msg);\n            }\n            throw e;\n        }\n        let tokens = tokenStream.getTokens();\n        // console.log("path=" + path + "=>" + tokens);\n        let elements = [];\n        let n = tokens.length;\n        let i = 0;\n        loop: while (i < n) {\n            let el = tokens[i];\n            let next;\n            switch (el.type) {\n                case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].ROOT:\n                case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].ANYWHERE:\n                    let anywhere = el.type === _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].ANYWHERE;\n                    i++;\n                    next = tokens[i];\n                    let invert = next.type === _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].BANG;\n                    if (invert) {\n                        i++;\n                        next = tokens[i];\n                    }\n                    let pathElement = this.getXPathElement(next, anywhere);\n                    pathElement.invert = invert;\n                    elements.push(pathElement);\n                    i++;\n                    break;\n                case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].TOKEN_REF:\n                case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].RULE_REF:\n                case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].WILDCARD:\n                    elements.push(this.getXPathElement(el, false));\n                    i++;\n                    break;\n                case _Token__WEBPACK_IMPORTED_MODULE_4__["Token"].EOF:\n                    break loop;\n                default:\n                    throw new Error("Unknowth path element " + el);\n            }\n        }\n        return elements;\n    }\n    /**\n     * Convert word like `*` or `ID` or `expr` to a path\n     * element. `anywhere` is `true` if `//` precedes the\n     * word.\n     */\n    getXPathElement(wordToken, anywhere) {\n        if (wordToken.type === _Token__WEBPACK_IMPORTED_MODULE_4__["Token"].EOF) {\n            throw new Error("Missing path element at end of path");\n        }\n        let word = wordToken.text;\n        if (word == null) {\n            throw new Error("Expected wordToken to have text content.");\n        }\n        let ttype = this.parser.getTokenType(word);\n        let ruleIndex = this.parser.getRuleIndex(word);\n        switch (wordToken.type) {\n            case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].WILDCARD:\n                return anywhere ?\n                    new _XPathWildcardAnywhereElement__WEBPACK_IMPORTED_MODULE_11__["XPathWildcardAnywhereElement"]() :\n                    new _XPathWildcardElement__WEBPACK_IMPORTED_MODULE_12__["XPathWildcardElement"]();\n            case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].TOKEN_REF:\n            case _XPathLexer__WEBPACK_IMPORTED_MODULE_5__["XPathLexer"].STRING:\n                if (ttype === _Token__WEBPACK_IMPORTED_MODULE_4__["Token"].INVALID_TYPE) {\n                    throw new Error(word + " at index " +\n                        wordToken.startIndex +\n                        " isn\'t a valid token name");\n                }\n                return anywhere ?\n                    new _XPathTokenAnywhereElement__WEBPACK_IMPORTED_MODULE_9__["XPathTokenAnywhereElement"](word, ttype) :\n                    new _XPathTokenElement__WEBPACK_IMPORTED_MODULE_10__["XPathTokenElement"](word, ttype);\n            default:\n                if (ruleIndex === -1) {\n                    throw new Error(word + " at index " +\n                        wordToken.startIndex +\n                        " isn\'t a valid rule name");\n                }\n                return anywhere ?\n                    new _XPathRuleAnywhereElement__WEBPACK_IMPORTED_MODULE_7__["XPathRuleAnywhereElement"](word, ruleIndex) :\n                    new _XPathRuleElement__WEBPACK_IMPORTED_MODULE_8__["XPathRuleElement"](word, ruleIndex);\n        }\n    }\n    static findAll(tree, xpath, parser) {\n        let p = new XPath(parser, xpath);\n        return p.evaluate(tree);\n    }\n    /**\n     * Return a list of all nodes starting at `t` as root that satisfy the\n     * path. The root `/` is relative to the node passed to {@link evaluate}.\n     */\n    evaluate(t) {\n        let dummyRoot = new _ParserRuleContext__WEBPACK_IMPORTED_MODULE_3__["ParserRuleContext"]();\n        dummyRoot.addChild(t);\n        let work = new Set([dummyRoot]);\n        let i = 0;\n        while (i < this.elements.length) {\n            let next = new Set();\n            for (let node of work) {\n                if (node.childCount > 0) {\n                    // only try to match next element if it has children\n                    // e.g., //func/*/stat might have a token node for which\n                    // we can\'t go looking for stat nodes.\n                    let matching = this.elements[i].evaluate(node);\n                    matching.forEach(next.add, next);\n                }\n            }\n            i++;\n            work = next;\n        }\n        return work;\n    }\n}\nXPath.WILDCARD = "*"; // word not operator/separator\nXPath.NOT = "!"; // word for invert operator\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPath.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathElement", function() { return XPathElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\nclass XPathElement {\n    /** Construct element like `/ID` or `ID` or `/*` etc...\n     *  op is null if just node\n     */\n    constructor(nodeName) {\n        this.nodeName = nodeName;\n        this.invert = false;\n    }\n    toString() {\n        let inv = this.invert ? "!" : "";\n        let className = Object.constructor.name;\n        return className + "[" + inv + this.nodeName + "]";\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathElement.prototype, "toString", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoRWxlbWVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvdHlwZXNjcmlwdC1lczYvYW50bHI0ZXM2L3RyZWUveHBhdGgvWFBhdGhFbGVtZW50LmpzPzUzMmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDb3B5cmlnaHQgMjAxNiBUaGUgQU5UTFIgUHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBCU0QtMy1DbGF1c2UgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG4vLyBDT05WRVJTVElPTiBjb21wbGV0ZSwgQnVydCBIYXJyaXMgMTAvMTQvMjAxNlxuaW1wb3J0IHsgT3ZlcnJpZGUgfSBmcm9tIFwiLi4vLi4vRGVjb3JhdG9yc1wiO1xuZXhwb3J0IGNsYXNzIFhQYXRoRWxlbWVudCB7XG4gICAgLyoqIENvbnN0cnVjdCBlbGVtZW50IGxpa2UgYC9JRGAgb3IgYElEYCBvciBgLypgIGV0Yy4uLlxuICAgICAqICBvcCBpcyBudWxsIGlmIGp1c3Qgbm9kZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5vZGVOYW1lKSB7XG4gICAgICAgIHRoaXMubm9kZU5hbWUgPSBub2RlTmFtZTtcbiAgICAgICAgdGhpcy5pbnZlcnQgPSBmYWxzZTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGxldCBpbnYgPSB0aGlzLmludmVydCA/IFwiIVwiIDogXCJcIjtcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9IE9iamVjdC5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgICAgICByZXR1cm4gY2xhc3NOYW1lICsgXCJbXCIgKyBpbnYgKyB0aGlzLm5vZGVOYW1lICsgXCJdXCI7XG4gICAgfVxufVxuX19kZWNvcmF0ZShbXG4gICAgT3ZlcnJpZGVcbl0sIFhQYXRoRWxlbWVudC5wcm90b3R5cGUsIFwidG9TdHJpbmdcIiwgbnVsbCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathLexer.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathLexer", function() { return XPathLexer; });\n/* harmony import */ var _atn_ATNDeserializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../atn/ATNDeserializer */ "../src/typescript-es6/antlr4es6/atn/ATNDeserializer.js");\n/* harmony import */ var _Lexer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Lexer */ "../src/typescript-es6/antlr4es6/Lexer.js");\n/* harmony import */ var _atn_LexerATNSimulator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../atn/LexerATNSimulator */ "../src/typescript-es6/antlr4es6/atn/LexerATNSimulator.js");\n/* harmony import */ var _VocabularyImpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../VocabularyImpl */ "../src/typescript-es6/antlr4es6/VocabularyImpl.js");\n/* harmony import */ var _misc_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../misc/Utils */ "../src/typescript-es6/antlr4es6/misc/Utils.js");\n// Generated from XPathLexer.g4 by ANTLR 4.7.3-SNAPSHOT\n\n\n\n\n\nclass XPathLexer extends _Lexer__WEBPACK_IMPORTED_MODULE_1__["Lexer"] {\n    // tslint:enable:no-trailing-whitespace\n    constructor(input) {\n        super(input);\n        this._interp = new _atn_LexerATNSimulator__WEBPACK_IMPORTED_MODULE_2__["LexerATNSimulator"](XPathLexer._ATN, this);\n    }\n    // @Override\n    // @NotNull\n    get vocabulary() {\n        return XPathLexer.VOCABULARY;\n    }\n    // @Override\n    get grammarFileName() { return "XPathLexer.g4"; }\n    // @Override\n    get ruleNames() { return XPathLexer.ruleNames; }\n    // @Override\n    get serializedATN() { return XPathLexer._serializedATN; }\n    // @Override\n    get channelNames() { return XPathLexer.channelNames; }\n    // @Override\n    get modeNames() { return XPathLexer.modeNames; }\n    // @Override\n    action(_localctx, ruleIndex, actionIndex) {\n        switch (ruleIndex) {\n            case 4:\n                this.ID_action(_localctx, actionIndex);\n                break;\n        }\n    }\n    ID_action(_localctx, actionIndex) {\n        switch (actionIndex) {\n            case 0:\n                let text = this.text;\n                if (text.charAt(0) === text.charAt(0).toUpperCase()) {\n                    this.type = XPathLexer.TOKEN_REF;\n                }\n                else {\n                    this.type = XPathLexer.RULE_REF;\n                }\n                break;\n        }\n    }\n    static get _ATN() {\n        if (!XPathLexer.__ATN) {\n            XPathLexer.__ATN = new _atn_ATNDeserializer__WEBPACK_IMPORTED_MODULE_0__["ATNDeserializer"]().deserialize(_misc_Utils__WEBPACK_IMPORTED_MODULE_4__["toCharArray"](XPathLexer._serializedATN));\n        }\n        return XPathLexer.__ATN;\n    }\n}\nXPathLexer.TOKEN_REF = 1;\nXPathLexer.RULE_REF = 2;\nXPathLexer.ANYWHERE = 3;\nXPathLexer.ROOT = 4;\nXPathLexer.WILDCARD = 5;\nXPathLexer.BANG = 6;\nXPathLexer.ID = 7;\nXPathLexer.STRING = 8;\n// tslint:disable:no-trailing-whitespace\nXPathLexer.channelNames = [\n    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",\n];\n// tslint:disable:no-trailing-whitespace\nXPathLexer.modeNames = [\n    "DEFAULT_MODE",\n];\nXPathLexer.ruleNames = [\n    "ANYWHERE", "ROOT", "WILDCARD", "BANG", "ID", "NameChar", "NameStartChar",\n    "STRING",\n];\nXPathLexer._LITERAL_NAMES = [\n    undefined, undefined, undefined, "\'//\'", "\'/\'", "\'*\'", "\'!\'",\n];\nXPathLexer._SYMBOLIC_NAMES = [\n    undefined, "TOKEN_REF", "RULE_REF", "ANYWHERE", "ROOT", "WILDCARD", "BANG",\n    "ID", "STRING",\n];\nXPathLexer.VOCABULARY = new _VocabularyImpl__WEBPACK_IMPORTED_MODULE_3__["VocabularyImpl"](XPathLexer._LITERAL_NAMES, XPathLexer._SYMBOLIC_NAMES, []);\nXPathLexer._serializedATNSegments = 2;\nXPathLexer._serializedATNSegment0 = "\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02\\n2\\b\\x01\\x04" +\n    "\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04" +\n    "\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03" +\n    "\\x03\\x04\\x03\\x04\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x07\\x06\\x1F\\n\\x06\\f\\x06" +\n    "\\x0E\\x06\\"\\v\\x06\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\t\\x03" +\n    "\\t\\x07\\t,\\n\\t\\f\\t\\x0E\\t/\\v\\t\\x03\\t\\x03\\t\\x03-\\x02\\x02\\n\\x03\\x02\\x05\\x05" +\n    "\\x02\\x06\\x07\\x02\\x07\\t\\x02\\b\\v\\x02\\t\\r\\x02\\x02\\x0F\\x02\\x02\\x11\\x02\\n\\x03" +\n    "\\x02\\x02\\x04\\u02B6\\x02\\x02\\x02\\n\\x02\\x10\\x02\\x1D\\x022\\x02;\\x02C\\x02\\\\" +\n    "\\x02a\\x02a\\x02c\\x02|\\x02\\x81\\x02\\xA1\\x02\\xAC\\x02\\xAC\\x02\\xAF\\x02\\xAF\\x02" +\n    "\\xB7\\x02\\xB7\\x02\\xBC\\x02\\xBC\\x02\\xC2\\x02\\xD8\\x02\\xDA\\x02\\xF8\\x02\\xFA\\x02" +\n    "\\u02C3\\x02\\u02C8\\x02\\u02D3\\x02\\u02E2\\x02\\u02E6\\x02\\u02EE\\x02\\u02EE\\x02" +\n    "\\u02F0\\x02\\u02F0\\x02\\u0302\\x02\\u0376\\x02\\u0378\\x02\\u0379\\x02\\u037C\\x02" +\n    "\\u037F\\x02\\u0381\\x02\\u0381\\x02\\u0388\\x02\\u0388\\x02\\u038A\\x02\\u038C\\x02" +\n    "\\u038E\\x02\\u038E\\x02\\u0390\\x02\\u03A3\\x02\\u03A5\\x02\\u03F7\\x02\\u03F9\\x02" +\n    "\\u0483\\x02\\u0485\\x02\\u0489\\x02\\u048C\\x02\\u0531\\x02\\u0533\\x02\\u0558\\x02" +\n    "\\u055B\\x02\\u055B\\x02\\u0563\\x02\\u0589\\x02\\u0593\\x02\\u05BF\\x02\\u05C1\\x02" +\n    "\\u05C1\\x02\\u05C3\\x02\\u05C4\\x02\\u05C6\\x02\\u05C7\\x02\\u05C9\\x02\\u05C9\\x02" +\n    "\\u05D2\\x02\\u05EC\\x02\\u05F2\\x02\\u05F4\\x02\\u0602\\x02\\u0607\\x02\\u0612\\x02" +\n    "\\u061C\\x02\\u061E\\x02\\u061E\\x02\\u0622\\x02\\u066B\\x02\\u0670\\x02\\u06D5\\x02" +\n    "\\u06D7\\x02\\u06DF\\x02\\u06E1\\x02\\u06EA\\x02\\u06EC\\x02\\u06FE\\x02\\u0701\\x02" +\n    "\\u0701\\x02\\u0711\\x02\\u074C\\x02\\u074F\\x02\\u07B3\\x02\\u07C2\\x02\\u07F7\\x02" +\n    "\\u07FC\\x02\\u07FC\\x02\\u0802\\x02\\u082F\\x02\\u0842\\x02\\u085D\\x02\\u08A2\\x02" +\n    "\\u08B6\\x02\\u08B8\\x02\\u08BF\\x02\\u08D6\\x02\\u0965\\x02\\u0968\\x02\\u0971\\x02" +\n    "\\u0973\\x02\\u0985\\x02\\u0987\\x02\\u098E\\x02\\u0991\\x02\\u0992\\x02\\u0995\\x02" +\n    "\\u09AA\\x02\\u09AC\\x02\\u09B2\\x02\\u09B4\\x02\\u09B4\\x02\\u09B8\\x02\\u09BB\\x02" +\n    "\\u09BE\\x02\\u09C6\\x02\\u09C9\\x02\\u09CA\\x02\\u09CD\\x02\\u09D0\\x02\\u09D9\\x02" +\n    "\\u09D9\\x02\\u09DE\\x02\\u09DF\\x02\\u09E1\\x02\\u09E5\\x02\\u09E8\\x02\\u09F3\\x02" +\n    "\\u0A03\\x02\\u0A05\\x02\\u0A07\\x02\\u0A0C\\x02\\u0A11\\x02\\u0A12\\x02\\u0A15\\x02" +\n    "\\u0A2A\\x02\\u0A2C\\x02\\u0A32\\x02\\u0A34\\x02\\u0A35\\x02\\u0A37\\x02\\u0A38\\x02" +\n    "\\u0A3A\\x02\\u0A3B\\x02\\u0A3E\\x02\\u0A3E\\x02\\u0A40\\x02\\u0A44\\x02\\u0A49\\x02" +\n    "\\u0A4A\\x02\\u0A4D\\x02\\u0A4F\\x02\\u0A53\\x02\\u0A53\\x02\\u0A5B\\x02\\u0A5E\\x02" +\n    "\\u0A60\\x02\\u0A60\\x02\\u0A68\\x02\\u0A77\\x02\\u0A83\\x02\\u0A85\\x02\\u0A87\\x02" +\n    "\\u0A8F\\x02\\u0A91\\x02\\u0A93\\x02\\u0A95\\x02\\u0AAA\\x02\\u0AAC\\x02\\u0AB2\\x02" +\n    "\\u0AB4\\x02\\u0AB5\\x02\\u0AB7\\x02\\u0ABB\\x02\\u0ABE\\x02\\u0AC7\\x02\\u0AC9\\x02" +\n    "\\u0ACB\\x02\\u0ACD\\x02\\u0ACF\\x02\\u0AD2\\x02\\u0AD2\\x02\\u0AE2\\x02\\u0AE5\\x02" +\n    "\\u0AE8\\x02\\u0AF1\\x02\\u0AFB\\x02\\u0AFB\\x02\\u0B03\\x02\\u0B05\\x02\\u0B07\\x02" +\n    "\\u0B0E\\x02\\u0B11\\x02\\u0B12\\x02\\u0B15\\x02\\u0B2A\\x02\\u0B2C\\x02\\u0B32\\x02" +\n    "\\u0B34\\x02\\u0B35\\x02\\u0B37\\x02\\u0B3B\\x02\\u0B3E\\x02\\u0B46\\x02\\u0B49\\x02" +\n    "\\u0B4A\\x02\\u0B4D\\x02\\u0B4F\\x02\\u0B58\\x02\\u0B59\\x02\\u0B5E\\x02\\u0B5F\\x02" +\n    "\\u0B61\\x02\\u0B65\\x02\\u0B68\\x02\\u0B71\\x02\\u0B73\\x02\\u0B73\\x02\\u0B84\\x02" +\n    "\\u0B85\\x02\\u0B87\\x02\\u0B8C\\x02\\u0B90\\x02\\u0B92\\x02\\u0B94\\x02\\u0B97\\x02" +\n    "\\u0B9B\\x02\\u0B9C\\x02\\u0B9E\\x02\\u0B9E\\x02\\u0BA0\\x02\\u0BA1\\x02\\u0BA5\\x02" +\n    "\\u0BA6\\x02\\u0BAA\\x02\\u0BAC\\x02\\u0BB0\\x02\\u0BBB\\x02\\u0BC0\\x02\\u0BC4\\x02" +\n    "\\u0BC8\\x02\\u0BCA\\x02\\u0BCC\\x02\\u0BCF\\x02\\u0BD2\\x02\\u0BD2\\x02\\u0BD9\\x02" +\n    "\\u0BD9\\x02\\u0BE8\\x02\\u0BF1\\x02\\u0C02\\x02\\u0C05\\x02\\u0C07\\x02\\u0C0E\\x02" +\n    "\\u0C10\\x02\\u0C12\\x02\\u0C14\\x02\\u0C2A\\x02\\u0C2C\\x02\\u0C3B\\x02\\u0C3F\\x02" +\n    "\\u0C46\\x02\\u0C48\\x02\\u0C4A\\x02\\u0C4C\\x02\\u0C4F\\x02\\u0C57\\x02\\u0C58\\x02" +\n    "\\u0C5A\\x02\\u0C5C\\x02\\u0C62\\x02\\u0C65\\x02\\u0C68\\x02\\u0C71\\x02\\u0C82\\x02" +\n    "\\u0C85\\x02\\u0C87\\x02\\u0C8E\\x02\\u0C90\\x02\\u0C92\\x02\\u0C94\\x02\\u0CAA\\x02" +\n    "\\u0CAC\\x02\\u0CB5\\x02\\u0CB7\\x02\\u0CBB\\x02\\u0CBE\\x02\\u0CC6\\x02\\u0CC8\\x02" +\n    "\\u0CCA\\x02\\u0CCC\\x02\\u0CCF\\x02\\u0CD7\\x02\\u0CD8\\x02\\u0CE0\\x02\\u0CE0\\x02" +\n    "\\u0CE2\\x02\\u0CE5\\x02\\u0CE8\\x02\\u0CF1\\x02\\u0CF3\\x02\\u0CF4\\x02\\u0D03\\x02" +\n    "\\u0D05\\x02\\u0D07\\x02\\u0D0E\\x02\\u0D10\\x02\\u0D12\\x02\\u0D14\\x02\\u0D3C\\x02" +\n    "\\u0D3F\\x02\\u0D46\\x02\\u0D48\\x02\\u0D4A\\x02\\u0D4C\\x02\\u0D50\\x02\\u0D56\\x02" +\n    "\\u0D59\\x02\\u0D61\\x02\\u0D65\\x02\\u0D68\\x02\\u0D71\\x02\\u0D7C\\x02\\u0D81\\x02" +\n    "\\u0D84\\x02\\u0D85\\x02\\u0D87\\x02\\u0D98\\x02\\u0D9C\\x02\\u0DB3\\x02\\u0DB5\\x02" +\n    "\\u0DBD\\x02\\u0DBF\\x02\\u0DBF\\x02\\u0DC2\\x02\\u0DC8\\x02\\u0DCC\\x02\\u0DCC\\x02" +\n    "\\u0DD1\\x02\\u0DD6\\x02\\u0DD8\\x02\\u0DD8\\x02\\u0DDA\\x02\\u0DE1\\x02\\u0DE8\\x02" +\n    "\\u0DF1\\x02\\u0DF4\\x02\\u0DF5\\x02\\u0E03\\x02\\u0E3C\\x02\\u0E42\\x02\\u0E50\\x02" +\n    "\\u0E52\\x02\\u0E5B\\x02\\u0E83\\x02\\u0E84\\x02\\u0E86\\x02\\u0E86\\x02\\u0E89\\x02" +\n    "\\u0E8A\\x02\\u0E8C\\x02\\u0E8C\\x02\\u0E8F\\x02\\u0E8F\\x02\\u0E96\\x02\\u0E99\\x02" +\n    "\\u0E9B\\x02\\u0EA1\\x02\\u0EA3\\x02\\u0EA5\\x02\\u0EA7\\x02\\u0EA7\\x02\\u0EA9\\x02" +\n    "\\u0EA9\\x02\\u0EAC\\x02\\u0EAD\\x02\\u0EAF\\x02\\u0EBB\\x02\\u0EBD\\x02\\u0EBF\\x02" +\n    "\\u0EC2\\x02\\u0EC6\\x02\\u0EC8\\x02\\u0EC8\\x02\\u0ECA\\x02\\u0ECF\\x02\\u0ED2\\x02" +\n    "\\u0EDB\\x02\\u0EDE\\x02\\u0EE1\\x02\\u0F02\\x02\\u0F02\\x02\\u0F1A\\x02\\u0F1B\\x02" +\n    "\\u0F22\\x02\\u0F2B\\x02\\u0F37\\x02\\u0F37\\x02\\u0F39\\x02\\u0F39\\x02\\u0F3B\\x02" +\n    "\\u0F3B\\x02\\u0F40\\x02\\u0F49\\x02\\u0F4B\\x02\\u0F6E\\x02\\u0F73\\x02\\u0F86\\x02" +\n    "\\u0F88\\x02\\u0F99\\x02\\u0F9B\\x02\\u0FBE\\x02\\u0FC8\\x02\\u0FC8\\x02\\u1002\\x02" +\n    "\\u104B\\x02\\u1052\\x02\\u109F\\x02\\u10A2\\x02\\u10C7\\x02\\u10C9\\x02\\u10C9\\x02" +\n    "\\u10CF\\x02\\u10CF\\x02\\u10D2\\x02\\u10FC\\x02\\u10FE\\x02\\u124A\\x02\\u124C\\x02" +\n    "\\u124F\\x02\\u1252\\x02\\u1258\\x02\\u125A\\x02\\u125A\\x02\\u125C\\x02\\u125F\\x02" +\n    "\\u1262\\x02\\u128A\\x02\\u128C\\x02\\u128F\\x02\\u1292\\x02\\u12B2\\x02\\u12B4\\x02" +\n    "\\u12B7\\x02\\u12BA\\x02\\u12C0\\x02\\u12C2\\x02\\u12C2\\x02\\u12C4\\x02\\u12C7\\x02" +\n    "\\u12CA\\x02\\u12D8\\x02\\u12DA\\x02\\u1312\\x02\\u1314\\x02\\u1317\\x02\\u131A\\x02" +\n    "\\u135C\\x02\\u135F\\x02\\u1361\\x02\\u1382\\x02\\u1391\\x02\\u13A2\\x02\\u13F7\\x02" +\n    "\\u13FA\\x02\\u13FF\\x02\\u1403\\x02\\u166E\\x02\\u1671\\x02\\u1681\\x02\\u1683\\x02" +\n    "\\u169C\\x02\\u16A2\\x02\\u16EC\\x02\\u16F0\\x02\\u16FA\\x02\\u1702\\x02\\u170E\\x02" +\n    "\\u1710\\x02\\u1716\\x02\\u1722\\x02\\u1736\\x02\\u1742\\x02\\u1755\\x02\\u1762\\x02" +\n    "\\u176E\\x02\\u1770\\x02\\u1772\\x02\\u1774\\x02\\u1775\\x02\\u1782\\x02\\u17D5\\x02" +\n    "\\u17D9\\x02\\u17D9\\x02\\u17DE\\x02\\u17DF\\x02\\u17E2\\x02\\u17EB\\x02\\u180D\\x02" +\n    "\\u1810\\x02\\u1812\\x02\\u181B\\x02\\u1822\\x02\\u1879\\x02\\u1882\\x02\\u18AC\\x02" +\n    "\\u18B2\\x02\\u18F7\\x02\\u1902\\x02\\u1920\\x02\\u1922\\x02\\u192D\\x02\\u1932\\x02" +\n    "\\u193D\\x02\\u1948\\x02\\u196F\\x02\\u1972\\x02\\u1976\\x02\\u1982\\x02\\u19AD\\x02" +\n    "\\u19B2\\x02\\u19CB\\x02\\u19D2\\x02\\u19DB\\x02\\u1A02\\x02\\u1A1D\\x02\\u1A22\\x02" +\n    "\\u1A60\\x02\\u1A62\\x02\\u1A7E\\x02\\u1A81\\x02\\u1A8B\\x02\\u1A92\\x02\\u1A9B\\x02" +\n    "\\u1AA9\\x02\\u1AA9\\x02\\u1AB2\\x02\\u1ABF\\x02\\u1B02\\x02\\u1B4D\\x02\\u1B52\\x02" +\n    "\\u1B5B\\x02\\u1B6D\\x02\\u1B75\\x02\\u1B82\\x02\\u1BF5\\x02\\u1C02\\x02\\u1C39\\x02" +\n    "\\u1C42\\x02\\u1C4B\\x02\\u1C4F\\x02\\u1C7F\\x02\\u1C82\\x02\\u1C8A\\x02\\u1CD2\\x02" +\n    "\\u1CD4\\x02\\u1CD6\\x02\\u1CF8\\x02\\u1CFA\\x02\\u1CFB\\x02\\u1D02\\x02\\u1DF7\\x02" +\n    "\\u1DFD\\x02\\u1F17\\x02\\u1F1A\\x02\\u1F1F\\x02\\u1F22\\x02\\u1F47\\x02\\u1F4A\\x02" +\n    "\\u1F4F\\x02\\u1F52\\x02\\u1F59\\x02\\u1F5B\\x02\\u1F5B\\x02\\u1F5D\\x02\\u1F5D\\x02" +\n    "\\u1F5F\\x02\\u1F5F\\x02\\u1F61\\x02\\u1F7F\\x02\\u1F82\\x02\\u1FB6\\x02\\u1FB8\\x02" +\n    "\\u1FBE\\x02\\u1FC0\\x02\\u1FC0\\x02\\u1FC4\\x02\\u1FC6\\x02\\u1FC8\\x02\\u1FCE\\x02" +\n    "\\u1FD2\\x02\\u1FD5\\x02\\u1FD8\\x02\\u1FDD\\x02\\u1FE2\\x02\\u1FEE\\x02\\u1FF4\\x02" +\n    "\\u1FF6\\x02\\u1FF8\\x02\\u1FFE\\x02\\u200D\\x02\\u2011\\x02\\u202C\\x02\\u2030\\x02" +\n    "\\u2041\\x02\\u2042\\x02\\u2056\\x02\\u2056\\x02\\u2062\\x02\\u2066\\x02\\u2068\\x02" +\n    "\\u2071\\x02\\u2073\\x02\\u2073\\x02\\u2081\\x02\\u2081\\x02\\u2092\\x02\\u209E\\x02" +\n    "\\u20D2\\x02\\u20DE\\x02\\u20E3\\x02\\u20E3\\x02\\u20E7\\x02\\u20F2\\x02\\u2104\\x02" +\n    "\\u2104\\x02\\u2109\\x02\\u2109\\x02\\u210C\\x02\\u2115\\x02\\u2117\\x02\\u2117\\x02" +\n    "\\u211B\\x02\\u211F\\x02\\u2126\\x02\\u2126\\x02\\u2128\\x02\\u2128\\x02\\u212A\\x02" +\n    "\\u212A\\x02\\u212C\\x02\\u212F\\x02\\u2131\\x02\\u213B\\x02\\u213E\\x02\\u2141\\x02" +\n    "\\u2147\\x02\\u214B\\x02\\u2150\\x02\\u2150\\x02\\u2162\\x02\\u218A\\x02\\u2C02\\x02" +\n    "\\u2C30\\x02\\u2C32\\x02\\u2C60\\x02\\u2C62\\x02\\u2CE6\\x02\\u2CED\\x02\\u2CF5\\x02" +\n    "\\u2D02\\x02\\u2D27\\x02\\u2D29\\x02\\u2D29\\x02\\u2D2F\\x02\\u2D2F\\x02\\u2D32\\x02" +\n    "\\u2D69\\x02\\u2D71\\x02\\u2D71\\x02\\u2D81\\x02\\u2D98\\x02\\u2DA2\\x02\\u2DA8\\x02" +\n    "\\u2DAA\\x02\\u2DB0\\x02\\u2DB2\\x02\\u2DB8\\x02\\u2DBA\\x02\\u2DC0\\x02\\u2DC2\\x02" +\n    "\\u2DC8\\x02\\u2DCA\\x02\\u2DD0\\x02\\u2DD2\\x02\\u2DD8\\x02\\u2DDA\\x02\\u2DE0\\x02" +\n    "\\u2DE2\\x02\\u2E01\\x02\\u2E31\\x02\\u2E31\\x02\\u3007\\x02\\u3009\\x02\\u3023\\x02" +\n    "\\u3031\\x02\\u3033\\x02\\u3037\\x02\\u303A\\x02\\u303E\\x02\\u3043\\x02\\u3098\\x02" +\n    "\\u309B\\x02\\u309C\\x02\\u309F\\x02\\u30A1\\x02\\u30A3\\x02\\u30FC\\x02\\u30FE\\x02" +\n    "\\u3101\\x02\\u3107\\x02\\u312F\\x02\\u3133\\x02\\u3190\\x02\\u31A2\\x02\\u31BC\\x02" +\n    "\\u31F2\\x02\\u3201\\x02\\u3402\\x02\\u4DB7\\x02\\u4E02\\x02\\u9FD7\\x02\\uA002\\x02" +\n    "\\uA48E\\x02\\uA4D2\\x02\\uA4FF\\x02\\uA502\\x02\\uA60E\\x02\\uA612\\x02\\uA62D\\x02" +\n    "\\uA642\\x02\\uA671\\x02\\uA676\\x02\\uA67F\\x02\\uA681\\x02\\uA6F3\\x02\\uA719\\x02" +\n    "\\uA721\\x02\\uA724\\x02\\uA78A\\x02\\uA78D\\x02\\uA7B0\\x02\\uA7B2\\x02\\uA7B9\\x02" +\n    "\\uA7F9\\x02\\uA829\\x02\\uA842\\x02\\uA875\\x02\\uA882\\x02\\uA8C7\\x02\\uA8D2\\x02" +\n    "\\uA8DB\\x02\\uA8E2\\x02\\uA8F9\\x02\\uA8FD\\x02\\uA8FD\\x02\\uA8FF\\x02\\uA8FF\\x02" +\n    "\\uA902\\x02\\uA92F\\x02\\uA932\\x02\\uA955\\x02\\uA962\\x02\\uA97E\\x02\\uA982\\x02" +\n    "\\uA9C2\\x02\\uA9D1\\x02\\uA9DB\\x02\\uA9E2\\x02\\uAA00\\x02\\uAA02\\x02\\uAA38\\x02" +\n    "\\uAA42\\x02\\uAA4F\\x02\\uAA52\\x02\\uAA5B\\x02\\uAA62\\x02\\uAA78\\x02\\uAA7C\\x02" +\n    "\\uAAC4\\x02\\uAADD\\x02\\uAADF\\x02\\uAAE2\\x02\\uAAF1\\x02\\uAAF4\\x02\\uAAF8\\x02" +\n    "\\uAB03\\x02\\uAB08\\x02\\uAB0B\\x02\\uAB10\\x02\\uAB13\\x02\\uAB18\\x02\\uAB22\\x02" +\n    "\\uAB28\\x02\\uAB2A\\x02\\uAB30\\x02\\uAB32\\x02\\uAB5C\\x02\\uAB5E\\x02\\uAB67\\x02" +\n    "\\uAB72\\x02\\uABEC\\x02\\uABEE\\x02\\uABEF\\x02\\uABF2\\x02\\uABFB\\x02\\uAC02\\x02" +\n    "\\uD7A5\\x02\\uD7B2\\x02\\uD7C8\\x02\\uD7CD\\x02\\uD7FD\\x02\\uF902\\x02\\uFA6F\\x02" +\n    "\\uFA72\\x02\\uFADB\\x02\\uFB02\\x02\\uFB08\\x02\\uFB15\\x02\\uFB19\\x02\\uFB1F\\x02" +\n    "\\uFB2A\\x02\\uFB2C\\x02\\uFB38\\x02\\uFB3A\\x02\\uFB3E\\x02\\uFB40\\x02\\uFB40\\x02" +\n    "\\uFB42\\x02\\uFB43\\x02\\uFB45\\x02\\uFB46\\x02\\uFB48\\x02\\uFBB3\\x02\\uFBD5\\x02" +\n    "\\uFD3F\\x02\\uFD52\\x02\\uFD91\\x02\\uFD94\\x02\\uFDC9\\x02\\uFDF2\\x02\\uFDFD\\x02" +\n    "\\uFE02\\x02\\uFE11\\x02\\uFE22\\x02\\uFE31\\x02\\uFE35\\x02\\uFE36\\x02\\uFE4F\\x02" +\n    "\\uFE51\\x02\\uFE72\\x02\\uFE76\\x02\\uFE78\\x02\\uFEFE\\x02\\uFF01\\x02\\uFF01\\x02" +\n    "\\uFF12\\x02\\uFF1B\\x02\\uFF23\\x02\\uFF3C\\x02\\uFF41\\x02\\uFF41\\x02\\uFF43\\x02" +\n    "\\uFF5C\\x02\\uFF68\\x02\\uFFC0\\x02\\uFFC4\\x02\\uFFC9\\x02\\uFFCC\\x02\\uFFD1\\x02" +\n    "\\uFFD4\\x02\\uFFD9\\x02\\uFFDC\\x02\\uFFDE\\x02\\uFFFB\\x02\\uFFFD\\x02\\x02\\x03\\r" +\n    "\\x03\\x0F\\x03(\\x03*\\x03<\\x03>\\x03?\\x03A\\x03O\\x03R\\x03_\\x03\\x82\\x03\\xFC" +\n    "\\x03\\u0142\\x03\\u0176\\x03\\u01FF\\x03\\u01FF\\x03\\u0282\\x03\\u029E\\x03\\u02A2" +\n    "\\x03\\u02D2\\x03\\u02E2\\x03\\u02E2\\x03\\u0302\\x03\\u0321\\x03\\u0332\\x03\\u034C" +\n    "\\x03\\u0352\\x03\\u037C\\x03\\u0382\\x03\\u039F\\x03\\u03A2\\x03\\u03C5\\x03\\u03CA" +\n    "\\x03\\u03D1\\x03\\u03D3\\x03\\u03D7\\x03\\u0402\\x03\\u049F\\x03\\u04A2\\x03\\u04AB" +\n    "\\x03\\u04B2\\x03\\u04D5\\x03\\u04DA\\x03\\u04FD\\x03\\u0502\\x03\\u0529\\x03\\u0532" +\n    "\\x03\\u0565\\x03\\u0602\\x03\\u0738\\x03\\u0742\\x03\\u0757\\x03\\u0762\\x03\\u0769" +\n    "\\x03\\u0802\\x03\\u0807\\x03\\u080A\\x03\\u080A\\x03\\u080C\\x03\\u0837\\x03\\u0839" +\n    "\\x03\\u083A\\x03\\u083E\\x03\\u083E\\x03\\u0841\\x03\\u0857\\x03\\u0862\\x03\\u0878" +\n    "\\x03\\u0882\\x03\\u08A0\\x03\\u08E2\\x03\\u08F4\\x03\\u08F6\\x03\\u08F7\\x03\\u0902" +\n    "\\x03\\u0917\\x03\\u0922\\x03\\u093B\\x03\\u0982\\x03\\u09B9\\x03\\u09C0\\x03\\u09C1" +\n    "\\x03\\u0A02\\x03\\u0A05\\x03\\u0A07\\x03\\u0A08\\x03\\u0A0E\\x03\\u0A15\\x03\\u0A17" +\n    "\\x03\\u0A19\\x03\\u0A1B\\x03\\u0A35\\x03\\u0A3A\\x03\\u0A3C\\x03\\u0A41\\x03\\u0A41" +\n    "\\x03\\u0A62\\x03\\u0A7E\\x03\\u0A82\\x03\\u0A9E\\x03\\u0AC2\\x03\\u0AC9\\x03\\u0ACB" +\n    "\\x03\\u0AE8\\x03\\u0B02\\x03\\u0B37\\x03\\u0B42\\x03\\u0B57\\x03\\u0B62\\x03\\u0B74" +\n    "\\x03\\u0B82\\x03\\u0B93\\x03\\u0C02\\x03\\u0C4A\\x03\\u0C82\\x03\\u0CB4\\x03\\u0CC2" +\n    "\\x03\\u0CF4\\x03\\u1002\\x03\\u1048\\x03\\u1068\\x03\\u1071\\x03\\u1081\\x03\\u10BC" +\n    "\\x03\\u10BF\\x03\\u10BF\\x03\\u10D2\\x03\\u10EA\\x03\\u10F2\\x03\\u10FB\\x03\\u1102" +\n    "\\x03\\u1136\\x03\\u1138\\x03\\u1141\\x03\\u1152\\x03\\u1175\\x03\\u1178\\x03\\u1178" +\n    "\\x03\\u1182\\x03\\u11C6\\x03\\u11CC\\x03\\u11CE\\x03\\u11D2\\x03\\u11DC\\x03\\u11DE" +\n    "\\x03\\u11DE\\x03\\u1202\\x03\\u1213\\x03\\u1215\\x03\\u1239\\x03\\u1240\\x03\\u1240" +\n    "\\x03\\u1282\\x03\\u1288\\x03\\u128A\\x03\\u128A\\x03\\u128C\\x03\\u128F\\x03\\u1291" +\n    "\\x03\\u129F\\x03\\u12A1\\x03\\u12AA\\x03\\u12B2\\x03\\u12EC\\x03\\u12F2\\x03\\u12FB" +\n    "\\x03\\u1302\\x03\\u1305\\x03\\u1307\\x03\\u130E\\x03\\u1311\\x03\\u1312\\x03\\u1315" +\n    "\\x03\\u132A\\x03\\u132C\\x03\\u1332\\x03\\u1334\\x03\\u1335\\x03\\u1337\\x03\\u133B" +\n    "\\x03\\u133E\\x03\\u1346\\x03\\u1349\\x03\\u134A\\x03\\u134D\\x03\\u134F\\x03\\u1352" +\n    "\\x03\\u1352\\x03\\u1359\\x03\\u1359\\x03\\u135F\\x03\\u1365\\x03\\u1368\\x03\\u136E" +\n    "\\x03\\u1372\\x03\\u1376\\x03\\u1402\\x03\\u144C\\x03\\u1452\\x03\\u145B\\x03\\u1482" +\n    "\\x03\\u14C7\\x03\\u14C9\\x03\\u14C9\\x03\\u14D2\\x03\\u14DB\\x03\\u1582\\x03\\u15B7" +\n    "\\x03\\u15BA\\x03\\u15C2\\x03\\u15DA\\x03\\u15DF\\x03\\u1602\\x03\\u1642\\x03\\u1646" +\n    "\\x03\\u1646\\x03\\u1652\\x03\\u165B\\x03\\u1682\\x03\\u16B9\\x03\\u16C2\\x03\\u16CB" +\n    "\\x03\\u1702\\x03\\u171B\\x03\\u171F\\x03\\u172D\\x03\\u1732\\x03\\u173B\\x03\\u18A2" +\n    "\\x03\\u18EB\\x03\\u1901\\x03\\u1901\\x03\\u1AC2\\x03\\u1AFA\\x03\\u1C02\\x03\\u1C0A" +\n    "\\x03\\u1C0C\\x03\\u1C38\\x03\\u1C3A\\x03\\u1C42\\x03\\u1C52\\x03\\u1C5B\\x03\\u1C74" +\n    "\\x03\\u1C91\\x03\\u1C94\\x03\\u1CA9\\x03\\u1CAB\\x03\\u1CB8\\x03\\u2002\\x03\\u239B" +\n    "\\x03\\u2402\\x03\\u2470\\x03\\u2482\\x03\\u2545\\x03\\u3002\\x03\\u3430\\x03\\u4402" +\n    "\\x03\\u4648\\x03\\u6802\\x03\\u6A3A\\x03\\u6A42\\x03\\u6A60\\x03\\u6A62\\x03\\u6A6B" +\n    "\\x03\\u6AD2\\x03\\u6AEF\\x03\\u6AF2\\x03\\u6AF6\\x03\\u6B02\\x03\\u6B38\\x03\\u6B42" +\n    "\\x03\\u6B45\\x03\\u6B52\\x03\\u6B5B\\x03\\u6B65\\x03\\u6B79\\x03\\u6B7F\\x03\\u6B91" +\n    "\\x03\\u6F02\\x03\\u6F46\\x03\\u6F52\\x03\\u6F80\\x03\\u6F91\\x03\\u6FA1\\x03\\u6FE2" +\n    "\\x03\\u6FE2\\x03\\u7002\\x03\\u87EE\\x03\\u8802\\x03\\u8AF4\\x03\\uB002\\x03\\uB003" +\n    "\\x03\\uBC02\\x03\\uBC6C\\x03\\uBC72\\x03\\uBC7E\\x03\\uBC82\\x03\\uBC8A\\x03\\uBC92" +\n    "\\x03\\uBC9B\\x03\\uBC9F\\x03\\uBCA0\\x03\\uBCA2\\x03\\uBCA5\\x03\\uD167\\x03\\uD16B" +\n    "\\x03\\uD16F\\x03\\uD184\\x03\\uD187\\x03\\uD18D\\x03\\uD1AC\\x03\\uD1AF\\x03\\uD244" +\n    "\\x03\\uD246\\x03\\uD402\\x03\\uD456\\x03\\uD458\\x03\\uD49E\\x03\\uD4A0\\x03\\uD4A1" +\n    "\\x03\\uD4A4\\x03\\uD4A4\\x03\\uD4A7\\x03\\uD4A8\\x03\\uD4AB\\x03\\uD4AE\\x03\\uD4B0" +\n    "\\x03\\uD4BB\\x03\\uD4BD\\x03\\uD4BD\\x03\\uD4BF\\x03\\uD4C5\\x03\\uD4C7\\x03\\uD507" +\n    "\\x03\\uD509\\x03\\uD50C\\x03\\uD50F\\x03\\uD516\\x03\\uD518\\x03\\uD51E\\x03\\uD520" +\n    "\\x03\\uD53B\\x03\\uD53D\\x03\\uD540\\x03\\uD542\\x03\\uD546\\x03\\uD548\\x03\\uD548" +\n    "\\x03\\uD54C\\x03\\uD552\\x03\\uD554\\x03\\uD6A7\\x03\\uD6AA\\x03\\uD6C2\\x03\\uD6C4" +\n    "\\x03\\uD6DC\\x03\\uD6DE\\x03\\uD6FC\\x03\\uD6FE\\x03\\uD716\\x03\\uD718\\x03\\uD736" +\n    "\\x03\\uD738\\x03\\uD750\\x03\\uD752\\x03\\uD770\\x03\\uD772\\x03\\uD78A\\x03\\uD78C" +\n    "\\x03\\uD7AA\\x03\\uD7AC\\x03\\uD7C4\\x03\\uD7C6\\x03\\uD7CD\\x03\\uD7D0\\x03\\uD801" +\n    "\\x03\\uDA02\\x03\\uDA38\\x03\\uDA3D\\x03\\uDA6E\\x03\\uDA77\\x03\\uDA77\\x03\\uDA86" +\n    "\\x03\\uDA86\\x03\\uDA9D\\x03\\uDAA1\\x03\\uDAA3\\x03\\uDAB1\\x03\\uE002\\x03\\uE008" +\n    "\\x03\\uE00A\\x03\\uE01A\\x03\\uE01D\\x03\\uE023\\x03\\uE025\\x03\\uE026\\x03\\uE028" +\n    "\\x03\\uE02C\\x03\\uE802\\x03\\uE8C6\\x03\\uE8D2\\x03\\uE8D8\\x03\\uE902\\x03\\uE94C" +\n    "\\x03\\uE952\\x03\\uE95B\\x03\\uEE02\\x03\\uEE05\\x03\\uEE07\\x03\\uEE21\\x03\\uEE23" +\n    "\\x03\\uEE24\\x03\\uEE26\\x03\\uEE26\\x03\\uEE29\\x03\\uEE29\\x03\\uEE2B\\x03\\uEE34" +\n    "\\x03\\uEE36\\x03\\uEE39\\x03\\uEE3B\\x03\\uEE3B\\x03\\uEE3D\\x03\\uEE3D\\x03\\uEE44" +\n    "\\x03\\uEE44\\x03\\uEE49\\x03\\uEE49\\x03\\uEE4B\\x03\\uEE4B\\x03\\uEE4D\\x03\\uEE4D" +\n    "\\x03\\uEE4F\\x03\\uEE51\\x03\\uEE53\\x03\\uEE54\\x03\\uEE56\\x03\\uEE56\\x03\\uEE59" +\n    "\\x03\\uEE59\\x03\\uEE5B\\x03\\uEE5B\\x03\\uEE5D\\x03\\uEE5D\\x03\\uEE5F\\x03\\uEE5F" +\n    "\\x03\\uEE61\\x03\\uEE61\\x03\\uEE63\\x03\\uEE64\\x03\\uEE66\\x03\\uEE66\\x03\\uEE69" +\n    "\\x03\\uEE6C\\x03\\uEE6E\\x03\\uEE74\\x03\\uEE76\\x03\\uEE79\\x03\\uEE7B\\x03\\uEE7E" +\n    "\\x03\\uEE80\\x03\\uEE80\\x03\\uEE82\\x03\\uEE8B\\x03\\uEE8D\\x03\\uEE9D\\x03\\uEEA3" +\n    "\\x03\\uEEA5\\x03\\uEEA7\\x03\\uEEAB\\x03\\uEEAD\\x03\\uEEBD\\x03\\x02\\x04\\uA6D8\\x04" +\n    "\\uA702\\x04\\uB736\\x04\\uB742\\x04\\uB81F\\x04\\uB822\\x04\\uCEA3\\x04\\uF802\\x04" +\n    "\\uFA1F\\x04\\x03\\x10\\x03\\x10\\"\\x10\\x81\\x10\\u0102\\x10\\u01F1\\x10\\u0240\\x02" +\n    "C\\x02\\\\\\x02c\\x02|\\x02\\xAC\\x02\\xAC\\x02\\xB7\\x02\\xB7\\x02\\xBC\\x02\\xBC\\x02" +\n    "\\xC2\\x02\\xD8\\x02\\xDA\\x02\\xF8\\x02\\xFA\\x02\\u02C3\\x02\\u02C8\\x02\\u02D3\\x02" +\n    "\\u02E2\\x02\\u02E6\\x02\\u02EE\\x02\\u02EE\\x02\\u02F0\\x02\\u02F0\\x02\\u0372\\x02" +\n    "\\u0376\\x02\\u0378\\x02\\u0379\\x02\\u037C\\x02\\u037F\\x02\\u0381\\x02\\u0381\\x02" +\n    "\\u0388\\x02\\u0388\\x02\\u038A\\x02\\u038C\\x02\\u038E\\x02\\u038E\\x02\\u0390\\x02" +\n    "\\u03A3\\x02\\u03A5\\x02\\u03F7\\x02\\u03F9\\x02\\u0483\\x02\\u048C\\x02\\u0531\\x02" +\n    "\\u0533\\x02\\u0558\\x02\\u055B\\x02\\u055B\\x02\\u0563\\x02\\u0589\\x02\\u05D2\\x02" +\n    "\\u05EC\\x02\\u05F2\\x02\\u05F4\\x02\\u0622\\x02\\u064C\\x02\\u0670\\x02\\u0671\\x02" +\n    "\\u0673\\x02\\u06D5\\x02\\u06D7\\x02\\u06D7\\x02\\u06E7\\x02\\u06E8\\x02\\u06F0\\x02" +\n    "\\u06F1\\x02\\u06FC\\x02\\u06FE\\x02\\u0701\\x02\\u0701\\x02\\u0712\\x02\\u0712\\x02" +\n    "\\u0714\\x02\\u0731\\x02\\u074F\\x02\\u07A7\\x02\\u07B3\\x02\\u07B3\\x02\\u07CC\\x02" +\n    "\\u07EC\\x02\\u07F6\\x02\\u07F7\\x02\\u07FC\\x02\\u07FC\\x02\\u0802\\x02\\u0817\\x02" +\n    "\\u081C\\x02\\u081C\\x02\\u0826\\x02\\u0826\\x02\\u082A\\x02\\u082A\\x02\\u0842\\x02" +\n    "\\u085A\\x02\\u08A2\\x02\\u08B6\\x02\\u08B8\\x02\\u08BF\\x02\\u0906\\x02\\u093B\\x02" +\n    "\\u093F\\x02\\u093F\\x02\\u0952\\x02\\u0952\\x02\\u095A\\x02\\u0963\\x02\\u0973\\x02" +\n    "\\u0982\\x02\\u0987\\x02\\u098E\\x02\\u0991\\x02\\u0992\\x02\\u0995\\x02\\u09AA\\x02" +\n    "\\u09AC\\x02\\u09B2\\x02\\u09B4\\x02\\u09B4\\x02\\u09B8\\x02\\u09BB\\x02\\u09BF\\x02" +\n    "\\u09BF\\x02\\u09D0\\x02\\u09D0\\x02\\u09DE\\x02\\u09DF\\x02\\u09E1\\x02\\u09E3\\x02" +\n    "\\u09F2\\x02\\u09F3\\x02\\u0A07\\x02\\u0A0C\\x02\\u0A11\\x02\\u0A12\\x02\\u0A15\\x02" +\n    "\\u0A2A\\x02\\u0A2C\\x02\\u0A32\\x02\\u0A34\\x02\\u0A35\\x02\\u0A37\\x02\\u0A38\\x02" +\n    "\\u0A3A\\x02\\u0A3B\\x02\\u0A5B\\x02\\u0A5E\\x02\\u0A60\\x02\\u0A60\\x02\\u0A74\\x02" +\n    "\\u0A76\\x02\\u0A87\\x02\\u0A8F\\x02\\u0A91\\x02\\u0A93\\x02\\u0A95\\x02\\u0AAA\\x02" +\n    "\\u0AAC\\x02\\u0AB2\\x02\\u0AB4\\x02\\u0AB5\\x02\\u0AB7\\x02\\u0ABB\\x02\\u0ABF\\x02" +\n    "\\u0ABF\\x02\\u0AD2\\x02\\u0AD2\\x02\\u0AE2\\x02\\u0AE3\\x02\\u0AFB\\x02\\u0AFB\\x02" +\n    "\\u0B07\\x02\\u0B0E\\x02\\u0B11\\x02\\u0B12\\x02\\u0B15\\x02\\u0B2A\\x02\\u0B2C\\x02" +\n    "\\u0B32\\x02\\u0B34\\x02\\u0B35\\x02\\u0B37\\x02\\u0B3B\\x02\\u0B3F\\x02\\u0B3F\\x02" +\n    "\\u0B5E\\x02\\u0B5F\\x02\\u0B61\\x02\\u0B63\\x02\\u0B73\\x02\\u0B73\\x02\\u0B85\\x02" +\n    "\\u0B85\\x02\\u0B87\\x02\\u0B8C\\x02\\u0B90\\x02\\u0B92\\x02\\u0B94\\x02\\u0B97\\x02" +\n    "\\u0B9B\\x02\\u0B9C\\x02\\u0B9E\\x02\\u0B9E\\x02\\u0BA0\\x02\\u0BA1\\x02\\u0BA5\\x02" +\n    "\\u0BA6\\x02\\u0BAA\\x02\\u0BAC\\x02\\u0BB0\\x02\\u0BBB\\x02\\u0BD2\\x02\\u0BD2\\x02" +\n    "\\u0C07\\x02\\u0C0E\\x02\\u0C10\\x02\\u0C12\\x02\\u0C14\\x02\\u0C2A\\x02\\u0C2C\\x02" +\n    "\\u0C3B\\x02\\u0C3F\\x02\\u0C3F\\x02\\u0C5A\\x02\\u0C5C\\x02\\u0C62\\x02\\u0C63\\x02" +\n    "\\u0C82\\x02\\u0C82\\x02\\u0C87\\x02\\u0C8E\\x02\\u0C90\\x02\\u0C92\\x02\\u0C94\\x02" +\n    "\\u0CAA\\x02\\u0CAC\\x02\\u0CB5\\x02\\u0CB7\\x02\\u0CBB\\x02\\u0CBF\\x02\\u0CBF\\x02" +\n    "\\u0CE0\\x02\\u0CE0\\x02\\u0CE2\\x02\\u0CE3\\x02\\u0CF3\\x02\\u0CF4\\x02\\u0D07\\x02" +\n    "\\u0D0E\\x02\\u0D10\\x02\\u0D12\\x02\\u0D14\\x02\\u0D3C\\x02\\u0D3F\\x02\\u0D3F\\x02" +\n    "\\u0D50\\x02\\u0D50\\x02\\u0D56\\x02\\u0D58\\x02\\u0D61\\x02\\u0D63\\x02\\u0D7C\\x02" +\n    "\\u0D81\\x02\\u0D87\\x02\\u0D98\\x02\\u0D9C\\x02\\u0DB3\\x02\\u0DB5\\x02\\u0DBD\\x02" +\n    "\\u0DBF\\x02\\u0DBF\\x02\\u0DC2\\x02\\u0DC8\\x02\\u0E03\\x02\\u0E32\\x02\\u0E34\\x02" +\n    "\\u0E35\\x02\\u0E42\\x02\\u0E48\\x02\\u0E83\\x02\\u0E84\\x02\\u0E86\\x02\\u0E86\\x02" +\n    "\\u0E89\\x02\\u0E8A\\x02\\u0E8C\\x02\\u0E8C\\x02\\u0E8F\\x02\\u0E8F\\x02\\u0E96\\x02" +\n    "\\u0E99\\x02\\u0E9B\\x02\\u0EA1\\x02\\u0EA3\\x02\\u0EA5\\x02\\u0EA7\\x02\\u0EA7\\x02" +\n    "\\u0EA9\\x02\\u0EA9\\x02\\u0EAC\\x02\\u0EAD\\x02\\u0EAF\\x02\\u0EB2\\x02\\u0EB4\\x02" +\n    "\\u0EB5\\x02\\u0EBF\\x02\\u0EBF\\x02\\u0EC2\\x02\\u0EC6\\x02\\u0EC8\\x02\\u0EC8\\x02" +\n    "\\u0EDE\\x02\\u0EE1\\x02\\u0F02\\x02\\u0F02\\x02\\u0F42\\x02\\u0F49\\x02\\u0F4B\\x02" +\n    "\\u0F6E\\x02\\u0F8A\\x02\\u0F8E\\x02\\u1002\\x02\\u102C\\x02\\u1041\\x02\\u1041\\x02" +\n    "\\u1052\\x02\\u1057\\x02\\u105C\\x02\\u105F\\x02\\u1063\\x02\\u1063\\x02\\u1067\\x02" +\n    "\\u1068\\x02\\u1070\\x02\\u1072\\x02\\u1077\\x02\\u1083\\x02\\u1090\\x02\\u1090\\x02" +\n    "\\u10A2\\x02\\u10C7\\x02\\u10C9\\x02\\u10C9\\x02\\u10CF\\x02\\u10CF\\x02\\u10D2\\x02" +\n    "\\u10FC\\x02\\u10FE\\x02\\u124A\\x02\\u124C\\x02\\u124F\\x02\\u1252\\x02\\u1258\\x02" +\n    "\\u125A\\x02\\u125A\\x02\\u125C\\x02\\u125F\\x02\\u1262\\x02\\u128A\\x02\\u128C\\x02" +\n    "\\u128F\\x02\\u1292\\x02\\u12B2\\x02\\u12B4\\x02\\u12B7\\x02\\u12BA\\x02\\u12C0\\x02" +\n    "\\u12C2\\x02\\u12C2\\x02\\u12C4\\x02\\u12C7\\x02\\u12CA\\x02\\u12D8\\x02\\u12DA\\x02" +\n    "\\u1312\\x02\\u1314\\x02\\u1317\\x02\\u131A\\x02\\u135C\\x02\\u1382\\x02\\u1391\\x02" +\n    "\\u13A2\\x02\\u13F7\\x02\\u13FA\\x02\\u13FF\\x02\\u1403\\x02\\u166E\\x02\\u1671\\x02" +\n    "\\u1681\\x02\\u1683\\x02\\u169C\\x02\\u16A2\\x02\\u16EC\\x02\\u16F0\\x02\\u16FA\\x02" +\n    "\\u1702\\x02\\u170E\\x02\\u1710\\x02\\u1713\\x02\\u1722\\x02\\u1733\\x02\\u1742\\x02" +\n    "\\u1753\\x02\\u1762\\x02\\u176E\\x02\\u1770\\x02\\u1772\\x02\\u1782\\x02\\u17B5\\x02" +\n    "\\u17D9\\x02\\u17D9\\x02\\u17DE\\x02\\u17DE\\x02\\u1822\\x02\\u1879\\x02\\u1882\\x02" +\n    "\\u1886\\x02\\u1889\\x02\\u18AA\\x02\\u18AC\\x02\\u18AC\\x02\\u18B2\\x02\\u18F7\\x02" +\n    "\\u1902\\x02\\u1920\\x02\\u1952\\x02\\u196F\\x02\\u1972\\x02\\u1976\\x02\\u1982\\x02" +\n    "\\u19AD\\x02\\u19B2\\x02\\u19CB\\x02\\u1A02\\x02\\u1A18\\x02\\u1A22\\x02\\u1A56\\x02" +\n    "\\u1AA9\\x02\\u1AA9\\x02\\u1B07\\x02\\u1B35\\x02\\u1B47\\x02\\u1B4D\\x02\\u1B85\\x02" +\n    "\\u1BA2\\x02\\u1BB0\\x02\\u1BB1\\x02\\u1BBC\\x02\\u1BE7\\x02\\u1C02\\x02\\u1C25\\x02" +\n    "\\u1C4F\\x02\\u1C51\\x02\\u1C5C\\x02\\u1C7F\\x02\\u1C82\\x02\\u1C8A\\x02\\u1CEB\\x02" +\n    "\\u1CEE\\x02\\u1CF0\\x02\\u1CF3\\x02\\u1CF7\\x02\\u1CF8\\x02\\u1D02\\x02\\u1DC1\\x02" +\n    "\\u1E02\\x02\\u1F17\\x02\\u1F1A\\x02\\u1F1F\\x02\\u1F22\\x02\\u1F47\\x02\\u1F4A\\x02" +\n    "\\u1F4F\\x02\\u1F52\\x02\\u1F59\\x02\\u1F5B\\x02\\u1F5B\\x02\\u1F5D\\x02\\u1F5D\\x02" +\n    "\\u1F5F\\x02\\u1F5F\\x02\\u1F61\\x02\\u1F7F\\x02\\u1F82\\x02\\u1FB6\\x02\\u1FB8\\x02" +\n    "\\u1FBE\\x02\\u1FC0\\x02\\u1FC0\\x02\\u1FC4\\x02\\u1FC6\\x02\\u1FC8\\x02\\u1FCE\\x02" +\n    "\\u1FD2\\x02\\u1FD5\\x02\\u1FD8\\x02\\u1FDD\\x02\\u1FE2\\x02\\u1FEE\\x02\\u1FF4\\x02" +\n    "\\u1FF6\\x02\\u1FF8\\x02\\u1FFE\\x02\\u2073\\x02\\u2073\\x02\\u2081\\x02\\u2081\\x02" +\n    "\\u2092\\x02\\u209E\\x02\\u2104\\x02\\u2104\\x02\\u2109\\x02\\u2109\\x02\\u210C\\x02" +\n    "\\u2115\\x02\\u2117\\x02\\u2117\\x02\\u211B\\x02\\u211F\\x02\\u2126\\x02\\u2126\\x02" +\n    "\\u2128\\x02\\u2128\\x02\\u212A\\x02\\u212A\\x02\\u212C\\x02\\u212F\\x02\\u2131\\x02" +\n    "\\u213B\\x02\\u213E\\x02\\u2141\\x02\\u2147\\x02\\u214B\\x02\\u2150\\x02\\u2150\\x02" +\n    "\\u2162\\x02\\u218A\\x02\\u2C02\\x02\\u2C30\\x02\\u2C32\\x02\\u2C60\\x02\\u2C62\\x02" +\n    "\\u2CE6\\x02\\u2CED\\x02\\u2CF0\\x02\\u2CF4\\x02\\u2CF5\\x02\\u2D02\\x02\\u2D27\\x02" +\n    "\\u2D29\\x02\\u2D29\\x02\\u2D2F\\x02\\u2D2F\\x02\\u2D32\\x02\\u2D69\\x02\\u2D71\\x02" +\n    "\\u2D71\\x02\\u2D82\\x02\\u2D98\\x02\\u2DA2\\x02\\u2DA8\\x02\\u2DAA\\x02\\u2DB0\\x02" +\n    "\\u2DB2\\x02\\u2DB8\\x02\\u2DBA\\x02\\u2DC0\\x02\\u2DC2\\x02\\u2DC8\\x02\\u2DCA\\x02" +\n    "\\u2DD0\\x02\\u2DD2\\x02\\u2DD8\\x02\\u2DDA\\x02\\u2DE0\\x02\\u2E31\\x02\\u2E31\\x02" +\n    "\\u3007\\x02\\u3009\\x02\\u3023\\x02\\u302B\\x02\\u3033\\x02\\u3037\\x02\\u303A\\x02" +\n    "\\u303E\\x02\\u3043\\x02\\u3098\\x02\\u309F\\x02\\u30A1\\x02\\u30A3\\x02\\u30FC\\x02" +\n    "\\u30FE\\x02\\u3101\\x02\\u3107\\x02\\u312F\\x02\\u3133\\x02\\u3190\\x02\\u31A2\\x02" +\n    "\\u31BC\\x02\\u31F2\\x02\\u3201\\x02\\u3402\\x02\\u4DB7\\x02\\u4E02\\x02\\u9FD7\\x02" +\n    "\\uA002\\x02\\uA48E\\x02\\uA4D2\\x02\\uA4FF\\x02\\uA502\\x02\\uA60E\\x02\\uA612\\x02" +\n    "\\uA621\\x02\\uA62C\\x02\\uA62D\\x02\\uA642\\x02\\uA670\\x02\\uA681\\x02\\uA69F\\x02" +\n    "\\uA6A2\\x02\\uA6F1\\x02\\uA719\\x02\\uA721\\x02\\uA724\\x02\\uA78A\\x02\\uA78D\\x02" +\n    "\\uA7B0\\x02\\uA7B2\\x02\\uA7B9\\x02\\uA7F9\\x02\\uA803\\x02\\uA805\\x02\\uA807\\x02" +\n    "\\uA809\\x02\\uA80C\\x02\\uA80E\\x02\\uA824\\x02\\uA842\\x02\\uA875\\x02\\uA884\\x02" +\n    "\\uA8B5\\x02\\uA8F4\\x02\\uA8F9\\x02\\uA8FD\\x02\\uA8FD\\x02\\uA8FF\\x02\\uA8FF\\x02" +\n    "\\uA90C\\x02\\uA927\\x02\\uA932\\x02\\uA948\\x02\\uA962\\x02\\uA97E\\x02\\uA986\\x02" +\n    "\\uA9B4\\x02\\uA9D1\\x02\\uA9D1\\x02\\uA9E2\\x02\\uA9E6\\x02\\uA9E8\\x02\\uA9F1\\x02" +\n    "\\uA9FC\\x02\\uAA00\\x02\\uAA02\\x02\\uAA2A\\x02\\uAA42\\x02\\uAA44\\x02\\uAA46\\x02" +\n    "\\uAA4D\\x02\\uAA62\\x02\\uAA78\\x02\\uAA7C\\x02\\uAA7C\\x02\\uAA80\\x02\\uAAB1\\x02" +\n    "\\uAAB3\\x02\\uAAB3\\x02\\uAAB7\\x02\\uAAB8\\x02\\uAABB\\x02\\uAABF\\x02\\uAAC2\\x02" +\n    "\\uAAC2\\x02\\uAAC4\\x02\\uAAC4\\x02\\uAADD\\x02\\uAADF\\x02\\uAAE2\\x02\\uAAEC\\x02" +\n    "\\uAAF4\\x02\\uAAF6\\x02\\uAB03\\x02\\uAB08\\x02\\uAB0B\\x02\\uAB10\\x02\\uAB13\\x02" +\n    "\\uAB18\\x02\\uAB22\\x02\\uAB28\\x02\\uAB2A\\x02\\uAB30\\x02\\uAB32\\x02\\uAB5C\\x02" +\n    "\\uAB5E\\x02\\uAB67\\x02\\uAB72\\x02\\uABE4\\x02\\uAC02\\x02\\uD7A5\\x02\\uD7B2\\x02" +\n    "\\uD7C8\\x02\\uD7CD\\x02\\uD7FD\\x02\\uF902\\x02\\uFA6F\\x02\\uFA72\\x02\\uFADB\\x02" +\n    "\\uFB02\\x02\\uFB08\\x02\\uFB15\\x02\\uFB19\\x02\\uFB1F\\x02\\uFB1F\\x02\\uFB21\\x02" +\n    "\\uFB2A\\x02\\uFB2C\\x02\\uFB38\\x02\\uFB3A\\x02\\uFB3E\\x02\\uFB40\\x02\\uFB40\\x02" +\n    "\\uFB42\\x02\\uFB43\\x02\\uFB45\\x02\\uFB46\\x02\\uFB48\\x02\\uFBB3\\x02\\uFBD5\\x02" +\n    "\\uFD3F\\x02\\uFD52\\x02\\uFD91\\x02\\uFD94\\x02\\uFDC9\\x02\\uFDF2\\x02\\uFDFD\\x02" +\n    "\\uFE72\\x02\\uFE76\\x02\\uFE78\\x02\\uFEFE\\x02\\uFF23\\x02\\uFF3C\\x02\\uFF43\\x02" +\n    "\\uFF5C\\x02\\uFF68\\x02\\uFFC0\\x02\\uFFC4\\x02\\uFFC9\\x02\\uFFCC\\x02\\uFFD1\\x02" +\n    "\\uFFD4\\x02\\uFFD9\\x02\\uFFDC\\x02\\uFFDE\\x02\\x02\\x03\\r\\x03\\x0F\\x03(\\x03*\\x03" +\n    "<\\x03>\\x03?\\x03A\\x03O\\x03R\\x03_\\x03\\x82\\x03\\xFC\\x03\\u0142\\x03\\u0176\\x03" +\n    "\\u0282\\x03\\u029E\\x03\\u02A2\\x03\\u02D2\\x03\\u0302\\x03\\u0321\\x03\\u0332\\x03" +\n    "\\u034C\\x03\\u0352\\x03\\u0377\\x03\\u0382\\x03\\u039F\\x03\\u03A2\\x03\\u03C5\\x03" +\n    "\\u03CA\\x03\\u03D1\\x03\\u03D3\\x03\\u03D7\\x03\\u0402\\x03\\u049F\\x03\\u04B2\\x03" +\n    "\\u04D5\\x03\\u04DA\\x03\\u04FD\\x03\\u0502\\x03\\u0529\\x03\\u0532\\x03\\u0565\\x03" +\n    "\\u0602\\x03\\u0738\\x03\\u0742\\x03\\u0757\\x03\\u0762\\x03\\u0769\\x03\\u0802\\x03" +\n    "\\u0807\\x03\\u080A\\x03\\u080A\\x03\\u080C\\x03\\u0837\\x03\\u0839\\x03\\u083A\\x03" +\n    "\\u083E\\x03\\u083E\\x03\\u0841\\x03\\u0857\\x03\\u0862\\x03\\u0878\\x03\\u0882\\x03" +\n    "\\u08A0\\x03\\u08E2\\x03\\u08F4\\x03\\u08F6\\x03\\u08F7\\x03\\u0902\\x03\\u0917\\x03" +\n    "\\u0922\\x03\\u093B\\x03\\u0982\\x03\\u09B9\\x03\\u09C0\\x03\\u09C1\\x03\\u0A02\\x03" +\n    "\\u0A02\\x03\\u0A12\\x03\\u0A15\\x03\\u0A17\\x03\\u0A19\\x03\\u0A1B\\x03\\u0A35\\x03" +\n    "\\u0A62\\x03\\u0A7E\\x03\\u0A82\\x03\\u0A9E\\x03\\u0AC2\\x03\\u0AC9\\x03\\u0ACB\\x03" +\n    "\\u0AE6\\x03\\u0B02\\x03\\u0B37\\x03\\u0B42\\x03\\u0B57\\x03\\u0B62\\x03\\u0B74\\x03" +\n    "\\u0B82\\x03\\u0B93\\x03\\u0C02\\x03\\u0C4A\\x03\\u0C82\\x03\\u0CB4\\x03\\u0CC2\\x03" +\n    "\\u0CF4\\x03\\u1005\\x03\\u1039\\x03\\u1085\\x03\\u10B1\\x03\\u10D2\\x03\\u10EA\\x03" +\n    "\\u1105\\x03\\u1128\\x03\\u1152\\x03\\u1174\\x03\\u1178\\x03\\u1178\\x03\\u1185\\x03" +\n    "\\u11B4\\x03\\u11C3\\x03\\u11C6\\x03\\u11DC\\x03\\u11DC\\x03\\u11DE\\x03\\u11DE\\x03" +\n    "\\u1202\\x03\\u1213\\x03\\u1215\\x03\\u122D\\x03\\u1282\\x03\\u1288\\x03\\u128A\\x03" +\n    "\\u128A\\x03\\u128C\\x03\\u128F\\x03\\u1291\\x03\\u129F\\x03\\u12A1\\x03\\u12AA\\x03" +\n    "\\u12B2\\x03\\u12E0\\x03\\u1307\\x03\\u130E\\x03\\u1311\\x03\\u1312\\x03\\u1315\\x03" +\n    "\\u132A\\x03\\u132C\\x03\\u1332\\x03\\u1334\\x03\\u1335\\x03\\u1337\\x03\\u133B\\x03" +\n    "\\u133F\\x03\\u133F\\x03\\u1352\\x03\\u1352\\x03\\u135F\\x03\\u1363\\x03\\u1402\\x03" +\n    "\\u1436\\x03\\u1449\\x03\\u144C\\x03\\u1482\\x03\\u14B1\\x03\\u14C6\\x03\\u14C7\\x03" +\n    "\\u14C9\\x03\\u14C9\\x03\\u1582\\x03\\u15B0\\x03\\u15DA\\x03\\u15DD\\x03\\u1602\\x03" +\n    "\\u1631\\x03\\u1646\\x03\\u1646\\x03\\u1682\\x03\\u16AC\\x03\\u1702\\x03\\u171B\\x03" +\n    "\\u18A2\\x03\\u18E1\\x03\\u1901\\x03\\u1901\\x03\\u1AC2\\x03\\u1AFA\\x03\\u1C02\\x03" +\n    "\\u1C0A\\x03\\u1C0C\\x03\\u1C30\\x03\\u1C42\\x03\\u1C42\\x03\\u1C74\\x03\\u1C91\\x03" +\n    "\\u2002\\x03\\u239B\\x03\\u2402\\x03\\u2470\\x03\\u2482\\x03\\u2545\\x03\\u3002\\x03" +\n    "\\u3430\\x03\\u4402\\x03\\u4648\\x03\\u6802\\x03\\u6A3A\\x03\\u6A42\\x03\\u6A60\\x03" +\n    "\\u6AD2\\x03\\u6AEF\\x03\\u6B02\\x03\\u6B31\\x03\\u6B42\\x03\\u6B45\\x03\\u6B65\\x03" +\n    "\\u6B79\\x03\\u6B7F\\x03\\u6B91\\x03\\u6F02\\x03\\u6F46\\x03\\u6F52\\x03\\u6F52\\x03" +\n    "\\u6F95\\x03\\u6FA1\\x03\\u6FE2\\x03\\u6FE2\\x03\\u7002\\x03\\u87EE\\x03\\u8802\\x03" +\n    "\\u8AF4\\x03\\uB002\\x03\\uB003\\x03\\uBC02\\x03\\uBC6C\\x03\\uBC72\\x03\\uBC7E\\x03" +\n    "\\uBC82\\x03\\uBC8A\\x03\\uBC92\\x03\\uBC9B\\x03\\uD402\\x03\\uD456\\x03\\uD458\\x03" +\n    "\\uD49E\\x03\\uD4A0\\x03\\uD4A1\\x03\\uD4A4\\x03\\uD4A4\\x03\\uD4A7\\x03\\uD4A8\\x03" +\n    "\\uD4AB\\x03\\uD4AE\\x03\\uD4B0\\x03\\uD4BB\\x03\\uD4BD\\x03\\uD4BD\\x03\\uD4BF\\x03" +\n    "\\uD4C5\\x03\\uD4C7\\x03\\uD507\\x03\\uD509\\x03\\uD50C\\x03\\uD50F\\x03\\uD516\\x03" +\n    "\\uD518\\x03\\uD51E\\x03\\uD520\\x03\\uD53B\\x03\\uD53D\\x03\\uD540\\x03\\uD542\\x03" +\n    "\\uD546\\x03\\uD548\\x03\\uD548";\nXPathLexer._serializedATNSegment1 = "\\x03\\uD54C\\x03\\uD552\\x03\\uD554\\x03\\uD6A7\\x03\\uD6AA\\x03\\uD6C2\\x03\\uD6C4" +\n    "\\x03\\uD6DC\\x03\\uD6DE\\x03\\uD6FC\\x03\\uD6FE\\x03\\uD716\\x03\\uD718\\x03\\uD736" +\n    "\\x03\\uD738\\x03\\uD750\\x03\\uD752\\x03\\uD770\\x03\\uD772\\x03\\uD78A\\x03\\uD78C" +\n    "\\x03\\uD7AA\\x03\\uD7AC\\x03\\uD7C4\\x03\\uD7C6\\x03\\uD7CD\\x03\\uE802\\x03\\uE8C6" +\n    "\\x03\\uE902\\x03\\uE945\\x03\\uEE02\\x03\\uEE05\\x03\\uEE07\\x03\\uEE21\\x03\\uEE23" +\n    "\\x03\\uEE24\\x03\\uEE26\\x03\\uEE26\\x03\\uEE29\\x03\\uEE29\\x03\\uEE2B\\x03\\uEE34" +\n    "\\x03\\uEE36\\x03\\uEE39\\x03\\uEE3B\\x03\\uEE3B\\x03\\uEE3D\\x03\\uEE3D\\x03\\uEE44" +\n    "\\x03\\uEE44\\x03\\uEE49\\x03\\uEE49\\x03\\uEE4B\\x03\\uEE4B\\x03\\uEE4D\\x03\\uEE4D" +\n    "\\x03\\uEE4F\\x03\\uEE51\\x03\\uEE53\\x03\\uEE54\\x03\\uEE56\\x03\\uEE56\\x03\\uEE59" +\n    "\\x03\\uEE59\\x03\\uEE5B\\x03\\uEE5B\\x03\\uEE5D\\x03\\uEE5D\\x03\\uEE5F\\x03\\uEE5F" +\n    "\\x03\\uEE61\\x03\\uEE61\\x03\\uEE63\\x03\\uEE64\\x03\\uEE66\\x03\\uEE66\\x03\\uEE69" +\n    "\\x03\\uEE6C\\x03\\uEE6E\\x03\\uEE74\\x03\\uEE76\\x03\\uEE79\\x03\\uEE7B\\x03\\uEE7E" +\n    "\\x03\\uEE80\\x03\\uEE80\\x03\\uEE82\\x03\\uEE8B\\x03\\uEE8D\\x03\\uEE9D\\x03\\uEEA3" +\n    "\\x03\\uEEA5\\x03\\uEEA7\\x03\\uEEAB\\x03\\uEEAD\\x03\\uEEBD\\x03\\x02\\x04\\uA6D8\\x04" +\n    "\\uA702\\x04\\uB736\\x04\\uB742\\x04\\uB81F\\x04\\uB822\\x04\\uCEA3\\x04\\uF802\\x04" +\n    "\\uFA1F\\x041\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\\x02\\x02\\x07\\x03" +\n    "\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02" +\n    "\\x02\\x02\\x03\\x13\\x03\\x02\\x02\\x02\\x05\\x16\\x03\\x02\\x02\\x02\\x07\\x18\\x03\\x02" +\n    "\\x02\\x02\\t\\x1A\\x03\\x02\\x02\\x02\\v\\x1C\\x03\\x02\\x02\\x02\\r%\\x03\\x02\\x02\\x02" +\n    "\\x0F\\\'\\x03\\x02\\x02\\x02\\x11)\\x03\\x02\\x02\\x02\\x13\\x14\\x071\\x02\\x02\\x14\\x15" +\n    "\\x071\\x02\\x02\\x15\\x04\\x03\\x02\\x02\\x02\\x16\\x17\\x071\\x02\\x02\\x17\\x06\\x03" +\n    "\\x02\\x02\\x02\\x18\\x19\\x07,\\x02\\x02\\x19\\b\\x03\\x02\\x02\\x02\\x1A\\x1B\\x07#\\x02" +\n    "\\x02\\x1B\\n\\x03\\x02\\x02\\x02\\x1C \\x05\\x0F\\b\\x02\\x1D\\x1F\\x05\\r\\x07\\x02\\x1E" +\n    "\\x1D\\x03\\x02\\x02\\x02\\x1F\\"\\x03\\x02\\x02\\x02 \\x1E\\x03\\x02\\x02\\x02 !\\x03" +\n    "\\x02\\x02\\x02!#\\x03\\x02\\x02\\x02\\" \\x03\\x02\\x02\\x02#$\\b\\x06\\x02\\x02$\\f\\x03" +\n    "\\x02\\x02\\x02%&\\t\\x02\\x02\\x02&\\x0E\\x03\\x02\\x02\\x02\\\'(\\t\\x03\\x02\\x02(\\x10" +\n    "\\x03\\x02\\x02\\x02)-\\x07)\\x02\\x02*,\\v\\x02\\x02\\x02+*\\x03\\x02\\x02\\x02,/\\x03" +\n    "\\x02\\x02\\x02-.\\x03\\x02\\x02\\x02-+\\x03\\x02\\x02\\x02.0\\x03\\x02\\x02\\x02/-\\x03" +\n    "\\x02\\x02\\x0201\\x07)\\x02\\x021\\x12\\x03\\x02\\x02\\x02\\x05\\x02 -\\x03\\x03\\x06" +\n    "\\x02";\nXPathLexer._serializedATN = _misc_Utils__WEBPACK_IMPORTED_MODULE_4__["join"]([\n    XPathLexer._serializedATNSegment0,\n    XPathLexer._serializedATNSegment1,\n], "");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathLexer.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathLexerErrorListener.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathLexerErrorListener", function() { return XPathLexerErrorListener; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nclass XPathLexerErrorListener {\n    syntaxError(recognizer, offendingSymbol, line, charPositionInLine, msg, e) {\n        // intentionally empty\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathLexerErrorListener.prototype, "syntaxError", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoTGV4ZXJFcnJvckxpc3RlbmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvdHJlZS94cGF0aC9YUGF0aExleGVyRXJyb3JMaXN0ZW5lci5qcz9kMzUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IHsgT3ZlcnJpZGUgfSBmcm9tIFwiLi4vLi4vRGVjb3JhdG9yc1wiO1xuZXhwb3J0IGNsYXNzIFhQYXRoTGV4ZXJFcnJvckxpc3RlbmVyIHtcbiAgICBzeW50YXhFcnJvcihyZWNvZ25pemVyLCBvZmZlbmRpbmdTeW1ib2wsIGxpbmUsIGNoYXJQb3NpdGlvbkluTGluZSwgbXNnLCBlKSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICB9XG59XG5fX2RlY29yYXRlKFtcbiAgICBPdmVycmlkZVxuXSwgWFBhdGhMZXhlckVycm9yTGlzdGVuZXIucHJvdG90eXBlLCBcInN5bnRheEVycm9yXCIsIG51bGwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathLexerErrorListener.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleAnywhereElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathRuleAnywhereElement", function() { return XPathRuleAnywhereElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n/**\n * Either `ID` at start of path or `...//ID` in middle of path.\n */\nclass XPathRuleAnywhereElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_2__["XPathElement"] {\n    constructor(ruleName, ruleIndex) {\n        super(ruleName);\n        this.ruleIndex = ruleIndex;\n    }\n    evaluate(t) {\n        return _Trees__WEBPACK_IMPORTED_MODULE_1__["Trees"].findAllRuleNodes(t, this.ruleIndex);\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathRuleAnywhereElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoUnVsZUFueXdoZXJlRWxlbWVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvdHlwZXNjcmlwdC1lczYvYW50bHI0ZXM2L3RyZWUveHBhdGgvWFBhdGhSdWxlQW55d2hlcmVFbGVtZW50LmpzPzUwMmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDb3B5cmlnaHQgMjAxNiBUaGUgQU5UTFIgUHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBCU0QtMy1DbGF1c2UgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgeyBPdmVycmlkZSB9IGZyb20gXCIuLi8uLi9EZWNvcmF0b3JzXCI7XG5pbXBvcnQgeyBUcmVlcyB9IGZyb20gXCIuLi9UcmVlc1wiO1xuaW1wb3J0IHsgWFBhdGhFbGVtZW50IH0gZnJvbSBcIi4vWFBhdGhFbGVtZW50XCI7XG4vKipcbiAqIEVpdGhlciBgSURgIGF0IHN0YXJ0IG9mIHBhdGggb3IgYC4uLi8vSURgIGluIG1pZGRsZSBvZiBwYXRoLlxuICovXG5leHBvcnQgY2xhc3MgWFBhdGhSdWxlQW55d2hlcmVFbGVtZW50IGV4dGVuZHMgWFBhdGhFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihydWxlTmFtZSwgcnVsZUluZGV4KSB7XG4gICAgICAgIHN1cGVyKHJ1bGVOYW1lKTtcbiAgICAgICAgdGhpcy5ydWxlSW5kZXggPSBydWxlSW5kZXg7XG4gICAgfVxuICAgIGV2YWx1YXRlKHQpIHtcbiAgICAgICAgcmV0dXJuIFRyZWVzLmZpbmRBbGxSdWxlTm9kZXModCwgdGhpcy5ydWxlSW5kZXgpO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIE92ZXJyaWRlXG5dLCBYUGF0aFJ1bGVBbnl3aGVyZUVsZW1lbnQucHJvdG90eXBlLCBcImV2YWx1YXRlXCIsIG51bGwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleAnywhereElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathRuleElement", function() { return XPathRuleElement; });\n/* harmony import */ var _ParserRuleContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ParserRuleContext */ "../src/typescript-es6/antlr4es6/ParserRuleContext.js");\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\n\nclass XPathRuleElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_3__["XPathElement"] {\n    constructor(ruleName, ruleIndex) {\n        super(ruleName);\n        this.ruleIndex = ruleIndex;\n    }\n    evaluate(t) {\n        // return all children of t that match nodeName\n        let nodes = [];\n        for (let c of _Trees__WEBPACK_IMPORTED_MODULE_2__["Trees"].getChildren(t)) {\n            if (c instanceof _ParserRuleContext__WEBPACK_IMPORTED_MODULE_0__["ParserRuleContext"]) {\n                if ((c.ruleIndex === this.ruleIndex && !this.invert) ||\n                    (c.ruleIndex !== this.ruleIndex && this.invert)) {\n                    nodes.push(c);\n                }\n            }\n        }\n        return nodes;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_1__["Override"]\n], XPathRuleElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoUnVsZUVsZW1lbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoUnVsZUVsZW1lbnQuanM/ZDdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE2IFRoZSBBTlRMUiBQcm9qZWN0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEJTRC0zLUNsYXVzZSBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbi8vIENPTlZFUlNUSU9OIGNvbXBsZXRlLCBCdXJ0IEhhcnJpcyAxMC8xNC8yMDE2XG5pbXBvcnQgeyBQYXJzZXJSdWxlQ29udGV4dCB9IGZyb20gXCIuLi8uLi9QYXJzZXJSdWxlQ29udGV4dFwiO1xuaW1wb3J0IHsgT3ZlcnJpZGUgfSBmcm9tIFwiLi4vLi4vRGVjb3JhdG9yc1wiO1xuaW1wb3J0IHsgVHJlZXMgfSBmcm9tIFwiLi4vVHJlZXNcIjtcbmltcG9ydCB7IFhQYXRoRWxlbWVudCB9IGZyb20gXCIuL1hQYXRoRWxlbWVudFwiO1xuZXhwb3J0IGNsYXNzIFhQYXRoUnVsZUVsZW1lbnQgZXh0ZW5kcyBYUGF0aEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKHJ1bGVOYW1lLCBydWxlSW5kZXgpIHtcbiAgICAgICAgc3VwZXIocnVsZU5hbWUpO1xuICAgICAgICB0aGlzLnJ1bGVJbmRleCA9IHJ1bGVJbmRleDtcbiAgICB9XG4gICAgZXZhbHVhdGUodCkge1xuICAgICAgICAvLyByZXR1cm4gYWxsIGNoaWxkcmVuIG9mIHQgdGhhdCBtYXRjaCBub2RlTmFtZVxuICAgICAgICBsZXQgbm9kZXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgYyBvZiBUcmVlcy5nZXRDaGlsZHJlbih0KSkge1xuICAgICAgICAgICAgaWYgKGMgaW5zdGFuY2VvZiBQYXJzZXJSdWxlQ29udGV4dCkge1xuICAgICAgICAgICAgICAgIGlmICgoYy5ydWxlSW5kZXggPT09IHRoaXMucnVsZUluZGV4ICYmICF0aGlzLmludmVydCkgfHxcbiAgICAgICAgICAgICAgICAgICAgKGMucnVsZUluZGV4ICE9PSB0aGlzLnJ1bGVJbmRleCAmJiB0aGlzLmludmVydCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChjKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIE92ZXJyaWRlXG5dLCBYUGF0aFJ1bGVFbGVtZW50LnByb3RvdHlwZSwgXCJldmFsdWF0ZVwiLCBudWxsKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathRuleElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenAnywhereElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathTokenAnywhereElement", function() { return XPathTokenAnywhereElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\nclass XPathTokenAnywhereElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_2__["XPathElement"] {\n    constructor(tokenName, tokenType) {\n        super(tokenName);\n        this.tokenType = tokenType;\n    }\n    evaluate(t) {\n        return _Trees__WEBPACK_IMPORTED_MODULE_1__["Trees"].findAllTokenNodes(t, this.tokenType);\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathTokenAnywhereElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoVG9rZW5Bbnl3aGVyZUVsZW1lbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoVG9rZW5Bbnl3aGVyZUVsZW1lbnQuanM/MTVmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE2IFRoZSBBTlRMUiBQcm9qZWN0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEJTRC0zLUNsYXVzZSBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbi8vIENPTlZFUlNUSU9OIGNvbXBsZXRlLCBCdXJ0IEhhcnJpcyAxMC8xNC8yMDE2XG5pbXBvcnQgeyBPdmVycmlkZSB9IGZyb20gXCIuLi8uLi9EZWNvcmF0b3JzXCI7XG5pbXBvcnQgeyBUcmVlcyB9IGZyb20gXCIuLi9UcmVlc1wiO1xuaW1wb3J0IHsgWFBhdGhFbGVtZW50IH0gZnJvbSBcIi4vWFBhdGhFbGVtZW50XCI7XG5leHBvcnQgY2xhc3MgWFBhdGhUb2tlbkFueXdoZXJlRWxlbWVudCBleHRlbmRzIFhQYXRoRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IodG9rZW5OYW1lLCB0b2tlblR5cGUpIHtcbiAgICAgICAgc3VwZXIodG9rZW5OYW1lKTtcbiAgICAgICAgdGhpcy50b2tlblR5cGUgPSB0b2tlblR5cGU7XG4gICAgfVxuICAgIGV2YWx1YXRlKHQpIHtcbiAgICAgICAgcmV0dXJuIFRyZWVzLmZpbmRBbGxUb2tlbk5vZGVzKHQsIHRoaXMudG9rZW5UeXBlKTtcbiAgICB9XG59XG5fX2RlY29yYXRlKFtcbiAgICBPdmVycmlkZVxuXSwgWFBhdGhUb2tlbkFueXdoZXJlRWxlbWVudC5wcm90b3R5cGUsIFwiZXZhbHVhdGVcIiwgbnVsbCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenAnywhereElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathTokenElement", function() { return XPathTokenElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _TerminalNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TerminalNode */ "../src/typescript-es6/antlr4es6/tree/TerminalNode.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\n\nclass XPathTokenElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_3__["XPathElement"] {\n    constructor(tokenName, tokenType) {\n        super(tokenName);\n        this.tokenType = tokenType;\n    }\n    evaluate(t) {\n        // return all children of t that match nodeName\n        let nodes = [];\n        for (let c of _Trees__WEBPACK_IMPORTED_MODULE_2__["Trees"].getChildren(t)) {\n            if (c instanceof _TerminalNode__WEBPACK_IMPORTED_MODULE_1__["TerminalNode"]) {\n                if ((c.symbol.type === this.tokenType && !this.invert) ||\n                    (c.symbol.type !== this.tokenType && this.invert)) {\n                    nodes.push(c);\n                }\n            }\n        }\n        return nodes;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathTokenElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoVG9rZW5FbGVtZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvdHJlZS94cGF0aC9YUGF0aFRva2VuRWxlbWVudC5qcz9hZmVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuLy8gQ09OVkVSU1RJT04gY29tcGxldGUsIEJ1cnQgSGFycmlzIDEwLzE0LzIwMTZcbmltcG9ydCB7IE92ZXJyaWRlIH0gZnJvbSBcIi4uLy4uL0RlY29yYXRvcnNcIjtcbmltcG9ydCB7IFRlcm1pbmFsTm9kZSB9IGZyb20gXCIuLi9UZXJtaW5hbE5vZGVcIjtcbmltcG9ydCB7IFRyZWVzIH0gZnJvbSBcIi4uL1RyZWVzXCI7XG5pbXBvcnQgeyBYUGF0aEVsZW1lbnQgfSBmcm9tIFwiLi9YUGF0aEVsZW1lbnRcIjtcbmV4cG9ydCBjbGFzcyBYUGF0aFRva2VuRWxlbWVudCBleHRlbmRzIFhQYXRoRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IodG9rZW5OYW1lLCB0b2tlblR5cGUpIHtcbiAgICAgICAgc3VwZXIodG9rZW5OYW1lKTtcbiAgICAgICAgdGhpcy50b2tlblR5cGUgPSB0b2tlblR5cGU7XG4gICAgfVxuICAgIGV2YWx1YXRlKHQpIHtcbiAgICAgICAgLy8gcmV0dXJuIGFsbCBjaGlsZHJlbiBvZiB0IHRoYXQgbWF0Y2ggbm9kZU5hbWVcbiAgICAgICAgbGV0IG5vZGVzID0gW107XG4gICAgICAgIGZvciAobGV0IGMgb2YgVHJlZXMuZ2V0Q2hpbGRyZW4odCkpIHtcbiAgICAgICAgICAgIGlmIChjIGluc3RhbmNlb2YgVGVybWluYWxOb2RlKSB7XG4gICAgICAgICAgICAgICAgaWYgKChjLnN5bWJvbC50eXBlID09PSB0aGlzLnRva2VuVHlwZSAmJiAhdGhpcy5pbnZlcnQpIHx8XG4gICAgICAgICAgICAgICAgICAgIChjLnN5bWJvbC50eXBlICE9PSB0aGlzLnRva2VuVHlwZSAmJiB0aGlzLmludmVydCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChjKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIE92ZXJyaWRlXG5dLCBYUGF0aFRva2VuRWxlbWVudC5wcm90b3R5cGUsIFwiZXZhbHVhdGVcIiwgbnVsbCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathTokenElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardAnywhereElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathWildcardAnywhereElement", function() { return XPathWildcardAnywhereElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./XPath */ "../src/typescript-es6/antlr4es6/tree/xpath/XPath.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\n\nclass XPathWildcardAnywhereElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_3__["XPathElement"] {\n    constructor() {\n        super(_XPath__WEBPACK_IMPORTED_MODULE_2__["XPath"].WILDCARD);\n    }\n    evaluate(t) {\n        if (this.invert) {\n            // !* is weird but valid (empty)\n            return [];\n        }\n        return _Trees__WEBPACK_IMPORTED_MODULE_1__["Trees"].getDescendants(t);\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathWildcardAnywhereElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoV2lsZGNhcmRBbnl3aGVyZUVsZW1lbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoV2lsZGNhcmRBbnl3aGVyZUVsZW1lbnQuanM/ZjZhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE2IFRoZSBBTlRMUiBQcm9qZWN0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEJTRC0zLUNsYXVzZSBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbi8vIENPTlZFUlNUSU9OIGNvbXBsZXRlLCBCdXJ0IEhhcnJpcyAxMC8xNC8yMDE2XG5pbXBvcnQgeyBPdmVycmlkZSB9IGZyb20gXCIuLi8uLi9EZWNvcmF0b3JzXCI7XG5pbXBvcnQgeyBUcmVlcyB9IGZyb20gXCIuLi9UcmVlc1wiO1xuaW1wb3J0IHsgWFBhdGggfSBmcm9tIFwiLi9YUGF0aFwiO1xuaW1wb3J0IHsgWFBhdGhFbGVtZW50IH0gZnJvbSBcIi4vWFBhdGhFbGVtZW50XCI7XG5leHBvcnQgY2xhc3MgWFBhdGhXaWxkY2FyZEFueXdoZXJlRWxlbWVudCBleHRlbmRzIFhQYXRoRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFhQYXRoLldJTERDQVJEKTtcbiAgICB9XG4gICAgZXZhbHVhdGUodCkge1xuICAgICAgICBpZiAodGhpcy5pbnZlcnQpIHtcbiAgICAgICAgICAgIC8vICEqIGlzIHdlaXJkIGJ1dCB2YWxpZCAoZW1wdHkpXG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFRyZWVzLmdldERlc2NlbmRhbnRzKHQpO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIE92ZXJyaWRlXG5dLCBYUGF0aFdpbGRjYXJkQW55d2hlcmVFbGVtZW50LnByb3RvdHlwZSwgXCJldmFsdWF0ZVwiLCBudWxsKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardAnywhereElement.js\n')},
"../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardElement.js":function(module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XPathWildcardElement", function() { return XPathWildcardElement; });\n/* harmony import */ var _Decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Decorators */ "../src/typescript-es6/antlr4es6/Decorators.js");\n/* harmony import */ var _Trees__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Trees */ "../src/typescript-es6/antlr4es6/tree/Trees.js");\n/* harmony import */ var _XPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./XPath */ "../src/typescript-es6/antlr4es6/tree/xpath/XPath.js");\n/* harmony import */ var _XPathElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./XPathElement */ "../src/typescript-es6/antlr4es6/tree/xpath/XPathElement.js");\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// CONVERSTION complete, Burt Harris 10/14/2016\n\n\n\n\nclass XPathWildcardElement extends _XPathElement__WEBPACK_IMPORTED_MODULE_3__["XPathElement"] {\n    constructor() {\n        super(_XPath__WEBPACK_IMPORTED_MODULE_2__["XPath"].WILDCARD);\n    }\n    evaluate(t) {\n        let kids = [];\n        if (this.invert) {\n            // !* is weird but valid (empty)\n            return kids;\n        }\n        for (let c of _Trees__WEBPACK_IMPORTED_MODULE_1__["Trees"].getChildren(t)) {\n            kids.push(c);\n        }\n        return kids;\n    }\n}\n__decorate([\n    _Decorators__WEBPACK_IMPORTED_MODULE_0__["Override"]\n], XPathWildcardElement.prototype, "evaluate", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3R5cGVzY3JpcHQtZXM2L2FudGxyNGVzNi90cmVlL3hwYXRoL1hQYXRoV2lsZGNhcmRFbGVtZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy90eXBlc2NyaXB0LWVzNi9hbnRscjRlczYvdHJlZS94cGF0aC9YUGF0aFdpbGRjYXJkRWxlbWVudC5qcz82ZWM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFOVExSIFByb2plY3QuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQlNELTMtQ2xhdXNlIGxpY2Vuc2UuIFNlZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuLy8gQ09OVkVSU1RJT04gY29tcGxldGUsIEJ1cnQgSGFycmlzIDEwLzE0LzIwMTZcbmltcG9ydCB7IE92ZXJyaWRlIH0gZnJvbSBcIi4uLy4uL0RlY29yYXRvcnNcIjtcbmltcG9ydCB7IFRyZWVzIH0gZnJvbSBcIi4uL1RyZWVzXCI7XG5pbXBvcnQgeyBYUGF0aCB9IGZyb20gXCIuL1hQYXRoXCI7XG5pbXBvcnQgeyBYUGF0aEVsZW1lbnQgfSBmcm9tIFwiLi9YUGF0aEVsZW1lbnRcIjtcbmV4cG9ydCBjbGFzcyBYUGF0aFdpbGRjYXJkRWxlbWVudCBleHRlbmRzIFhQYXRoRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFhQYXRoLldJTERDQVJEKTtcbiAgICB9XG4gICAgZXZhbHVhdGUodCkge1xuICAgICAgICBsZXQga2lkcyA9IFtdO1xuICAgICAgICBpZiAodGhpcy5pbnZlcnQpIHtcbiAgICAgICAgICAgIC8vICEqIGlzIHdlaXJkIGJ1dCB2YWxpZCAoZW1wdHkpXG4gICAgICAgICAgICByZXR1cm4ga2lkcztcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBjIG9mIFRyZWVzLmdldENoaWxkcmVuKHQpKSB7XG4gICAgICAgICAgICBraWRzLnB1c2goYyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGtpZHM7XG4gICAgfVxufVxuX19kZWNvcmF0ZShbXG4gICAgT3ZlcnJpZGVcbl0sIFhQYXRoV2lsZGNhcmRFbGVtZW50LnByb3RvdHlwZSwgXCJldmFsdWF0ZVwiLCBudWxsKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/typescript-es6/antlr4es6/tree/xpath/XPathWildcardElement.js\n')}}]);
